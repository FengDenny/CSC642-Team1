{"version":3,"sources":["image/explore.png","components/card/Cards.js","pages/Card/LatestCard.js","pages/Card/ConflictCard.js","pages/Card/FutureCards.js","components/card/CardSubmit.js","pages/Card/SubmitCard.js","components/modals/CreateAccountModal.js","pages/home/Home.js","pages/Submit/SubmitTrial.js","components/form/SignInForm.js","redux/actions/authAction.js","components/form/SignInFormData.js","components/modals/SignInModal.js","components/form/ParticipantAuthForm.js","components/passwordToggle/PasswordReveal.js","components/formValidation/FormValidation.js","components/form/ParticipantFormData.js","components/modals/ParticipantAuthModal.js","components/form/ClinicalAuthForm.js","components/form/ClinicalFormData.js","components/modals/ClinicalAuthModal.js","redux/actions/trailSubmitAction.js","pages/Submit/SubmitTrialData.js","pages/Protected/AccountSettings.js","pages/Protected/AccountSettingsData.js","pages/Protected/ClinicalAccountSettings.js","pages/Protected/ClinicalAccountSettingsData.js","pages/Protected/Participate/Participate.js","pages/Protected/clinical/TrialSubmitted.js","components/form/AppliedTrialForm.js","redux/actions/appliedAction.js","components/form/AppledTrialFormData.js","components/modals/ApplyTrialModal.js","components/map/GoogleMapContainer.js","pages/Trials/AboutLatestTrials.js","pages/Trials/AboutLatestSubmit.js","pages/Trials/AboutConflictTrials.js","pages/Trials/AboutDiscoverTrials.js","pages/Protected/applied/TrialApplied.js","components/search/SearchTrials.js","components/search/SearchData.js","image/logo.png","redux/actions/searchAction.js","utility/navbar/SearchBar.js","utility/navbar/AuthNav.js","utility/navbar/Navbar.js","utility/footer/SocialIcons.js","utility/footer/Footer.js","utility/banner/Banner.js","App.js","redux/reducers/authReducer.js","redux/reducers/trialSubmitReducer.js","redux/reducers/searchReducer.js","redux/reducers/appliedReducer.js","index.js"],"names":["Cards","props","navigate","useNavigate","Container","className","Card","price","Title","as","Header","title","Body","participants","eligibility","Row","Col","xs","eligibleOne","eligibleTwo","eligibleThree","eligibleFour","ineligibleOne","ineligibleTwo","ineligibleThree","ineligibleFour","status","Button","variant","onClick","btnName","id","LatestCard","trials","sort","a","b","slice","map","item","index","i","eligible","isEligible","ineligible","notEligible","requirement_one","requirement_two","requirement_three","requirement_four","detail","ConflictCard","FutureCards","submit","useSelector","state","qualified","notQualified","submitPrice","data","replace","SubmitCard","trialID","payout","match","CreateAccountModal","onHide","fname","cname","auth","Modal","centered","closeButton","isLoggedIn","Home","useState","alertModal","setAlertModal","alertApplyModal","setAlertApplyModal","active","setActive","prerequisite","fluid","clinicalLoggedIn","Image","src","Explore","rounded","alt","firstName","show","companyName","SubmitTrial","setTitle","setParticipants","handleFormSubmit","setPayout","description","setDescription","setQualified","setNotQualified","setPrerequisite","location","setLocation","setStatus","start","setStart","end","setEnd","SignInModal","ParticipantAuthModal","ClinicalAuthModal","showModal","setShowModal","showClincicalModal","setShowClincicalModal","showSignInModal","setShowSignInModal","priceError","startError","endError","studyType","locationError","setStudyType","commaError","commaTwoError","aptno","setAptno","citystate","setCityState","zipcode","setZipcode","Form","Group","Label","Control","placeholder","value","onChange","e","target","maxLength","type","rows","address","required","min","Select","to","disabled","SignInForm","email","password","setEmail","setPassword","setUserFirstName","setUserLastName","lastName","setUserEmail","setUserAddress","setUserAptNo","setUserCityState","setUserZipcode","setUserPassword","setIsLoggedIn","setClinicalLoggedIn","deleteUserInfo","SignInFormData","dispatch","useDispatch","reduxPass","reduxEmail","reduxClinicalPass","clinicalPassword","reduxClinicalEmail","clinicalEmail","isSignedIn","toast","success","console","log","preventDefault","signInModal","ParticipantAuthForm","first","setFirst","last","setLast","passwordReveal","showPassword","setShowPassword","FaEye","FaEyeSlash","firstNameError","lastNameError","emailError","passwordError","passwordInput","document","getElementById","setAttribute","nameValidation","nameType","name","setError","length","emailValidation","passwordValidation","dateValidation","containCommasValidations","includes","ParticipantFormData","setFirstNameError","setLastNameError","setEmailError","setPasswordError","useEffect","nanoid","Id","userId","ModalForm","ClinicalAuthForm","setName","nameError","ClinicalFormData","setNameError","clinicalID","setTrialTitle","setTrialDescription","setTrialParticipants","setTrialQualified","setTrialNotQualified","setTrialPrerequisite","setTrialPayout","setTrialStatus","setTrialType","setTrialDate","SubmitTrialData","setPriceError","setStartError","setEndError","setLocationError","setCommaError","setCommaTwoError","addressValidations","splitReqirements","split","splitNonReqirements","splitPrerequisite","coordinates","setTrialLocation","poster","AccountSettings","handleSettingsSubmit","setFirstName","setLastName","setAddress","handleEmailSubmit","useParams","comparePasswords","submitPasswordUpdate","Tab","defaultActiveKey","Nav","Item","Link","style","color","eventKey","sm","Content","Pane","width","window","confirm","AccountSettingsData","ClinicalAccountSettings","ClinicalAccountSettingsData","TrialSubmitted","Text","AppliedTrialForm","emailApply","setEmailApply","handleApply","setAppliedTitle","trialTitle","setAppliedParticipants","setAppliedDescription","AppledTrialFormData","setAppliedEmail","setAppliedName","appliedID","url","href","ApplyTrialModal","dotenv","config","path","mapStyles","marginTop","height","position","border","borderRadius","GoogleApiWrapper","apiKey","process","REACT_APP_GOOGLE_MAP_API_KEY","showInfoWindow","setShowInfoWindow","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","lat","lng","latLon","setLatLon","getCoordinates","mapAddress","axios","get","then","response","results","geometry","catch","error","google","isActive","zoom","initialCenter","center","marker","visible","onClose","AboutLatestTrials","latest","find","Number","appliedModal","setAppliedModal","applied","el","result","_id","loc","AboutLatestSubmitTrials","timeElapsed","Date","now","today","date","toDateString","AboutConflictTrials","conflict","AboutDiscoverTrials","discover","TrialApplied","SearchTrials","future","text","SearchData","search","select","searchValue","LatestTrials","filter","toLowerCase","conflictTrials","futureTrials","setSearchSelect","SearchBar","setValue","setText","icon","faSearch","size","setSearchText","handleSubmitSearch","library","add","faGithub","faLinkedin","AuthClinicalNav","NavDropdown","menuVariant","Divider","AuthParticipant","NavbarComponent","Navbar","collapseOnSelect","expand","Brand","Logo","Toggle","Collapse","md","SocialIcons","Footer","Banner","toUpperCase","App","element","useRoutes","INITIAL_STATE","authReducer","action","trialSubmitReducer","searchReducer","appliedReducer","rootReducer","combineReducers","trailSubmitReducer","persistConfig","key","storage","stateReconciler","autoMergeLevel1","persistedReducer","persistReducer","store","composeWithDevTools","applyMiddleware","thunk","createStore","persistor","persistStore","ReactDOM","render","loading"],"mappings":"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","file":"static/js/main.abbdbedc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/explore.3847b920.png\";","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Image,\r\n  Card,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function Cards(props) {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Container className='card-container '>\r\n      <Card className='card'>\r\n        {props.price ? (\r\n          <Card.Title\r\n            as='h5'\r\n            className='price-banner d-flex justify-content-center'\r\n          >\r\n            {props.price}\r\n          </Card.Title>\r\n        ) : null}\r\n\r\n        <Card.Header className='card-header-css primary-font'>\r\n          {props.title}\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{props.participants}</Card.Title>\r\n          <Card.Title className='title-header'>{props.eligibility}</Card.Title>\r\n          <Row>\r\n            <Col xs={6}>\r\n              {props.eligibleOne ? (\r\n                <Card.Body>\r\n                  <FaCheck className='green-color' /> {props.eligibleOne}\r\n                </Card.Body>\r\n              ) : null}\r\n              {props.eligibleTwo ? (\r\n                <Card.Body>\r\n                  <FaCheck className='green-color' /> {props.eligibleTwo}\r\n                </Card.Body>\r\n              ) : null}\r\n              {props.eligibleThree ? (\r\n                <Card.Body>\r\n                  <FaCheck className='green-color' /> {props.eligibleThree}\r\n                </Card.Body>\r\n              ) : null}\r\n              {props.eligibleFour ? (\r\n                <Card.Body>\r\n                  <FaCheck className='green-color' /> {props.eligibleFour}\r\n                </Card.Body>\r\n              ) : null}\r\n            </Col>\r\n            <Col xs={6}>\r\n              {props.ineligibleOne ? (\r\n                <Card.Body>\r\n                  <FaTimes className='red-color' /> {props.ineligibleOne}\r\n                </Card.Body>\r\n              ) : null}\r\n              {props.ineligibleTwo ? (\r\n                <Card.Body>\r\n                  <FaTimes className='red-color' /> {props.ineligibleTwo}\r\n                </Card.Body>\r\n              ) : null}\r\n              {props.ineligibleThree ? (\r\n                <Card.Body>\r\n                  <FaTimes className='red-color' /> {props.ineligibleThree}\r\n                </Card.Body>\r\n              ) : null}\r\n              {props.ineligibleFour ? (\r\n                <Card.Body>\r\n                  <FaTimes className='red-color' /> {props.ineligibleFour}\r\n                </Card.Body>\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n          <Col className='top-10'>\r\n            {props.status === \"Recruiting\" ? (\r\n              <Card.Body>\r\n                <h5>\r\n                  Status: <span className='green-color'>{props.status}</span>\r\n                </h5>\r\n              </Card.Body>\r\n            ) : props.status === \"Not Recruiting\" ? (\r\n              <Card.Body>\r\n                <h5>\r\n                  Status: <span className='red-color'>{props.status}</span>\r\n                </h5>\r\n              </Card.Body>\r\n            ) : null}\r\n          </Col>\r\n        </Card.Body>\r\n        <Button\r\n          variant='primary'\r\n          className='card-primary-color-btn '\r\n          onClick={() =>\r\n            props.btnName === \"Learn More\"\r\n              ? navigate(`latest/${props.id}`)\r\n              : props.btnName === \"Participate\"\r\n              ? navigate(`conflict-free/${props.id}`)\r\n              : props.btnName === \"Discover\"\r\n              ? navigate(`discover/${props.id}`)\r\n              : null\r\n          }\r\n        >\r\n          {props.btnName}\r\n        </Button>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../../components/card/Cards\";\r\nimport trials from \"../../stimulate-backend/data/latest-trials.json\";\r\n\r\nexport default function LatestCard(props) {\r\n  return (\r\n    <>\r\n      {/* show only 4 cards  */}\r\n      {/* {console.log(trials[\"Latest Trials\"])} */}\r\n      {trials[\"Latest Trials\"] &&\r\n        trials[\"Latest Trials\"]\r\n          .sort(function (a, b) {\r\n            return b.id - a.id || b.price - a.price;\r\n          })\r\n          .slice(0, props.slice)\r\n          .map((item, index) =>\r\n            item.eligibility.map(\r\n              (i) =>\r\n                i.eligible &&\r\n                i.eligible.map(\r\n                  (isEligible) =>\r\n                    i.ineligible &&\r\n                    i.ineligible.map((notEligible) => (\r\n                      <>\r\n                        <Card\r\n                          key={index}\r\n                          id={item.id}\r\n                          price={item.price}\r\n                          title={item.title}\r\n                          eligibility={item.participants}\r\n                          eligibleOne={isEligible.requirement_one}\r\n                          eligibleTwo={isEligible.requirement_two}\r\n                          eligibleThree={isEligible.requirement_three}\r\n                          eligibleFour={isEligible.requirement_four}\r\n                          ineligibleOne={notEligible.requirement_one}\r\n                          ineligibleTwo={notEligible.requirement_two}\r\n                          ineligibleThree={notEligible.requirement_three}\r\n                          ineligibleFour={notEligible.requirement_four}\r\n                          status={item.detail[0].status}\r\n                          btnName={\"Learn More\"}\r\n                        ></Card>\r\n                      </>\r\n                    ))\r\n                )\r\n            )\r\n          )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../../components/card/Cards\";\r\nimport trials from \"../../stimulate-backend/data/conflict-free.json\";\r\n\r\nexport default function ConflictCard(props) {\r\n  return (\r\n    <>\r\n      {/* show only 4 cards  */}\r\n      {/* {console.log(\"After sort:\", trials[\"Conflict-Free\"])} */}\r\n      {trials[\"Conflict-Free\"] &&\r\n        trials[\"Conflict-Free\"]\r\n          .sort(function (a, b) {\r\n            return b.id - a.id;\r\n          })\r\n          .slice(0, props.slice)\r\n          .map((item, index) =>\r\n            item.eligibility.map(\r\n              (i) =>\r\n                i.eligible &&\r\n                i.eligible.map(\r\n                  (isEligible) =>\r\n                    i.ineligible &&\r\n                    i.ineligible.map((notEligible) => (\r\n                      <>\r\n                        <Card\r\n                          key={index}\r\n                          id={item.id}\r\n                          price={item.price}\r\n                          title={item.title}\r\n                          eligibility={item.participants}\r\n                          eligibleOne={isEligible.requirement_one}\r\n                          eligibleTwo={isEligible.requirement_two}\r\n                          eligibleThree={isEligible.requirement_three}\r\n                          eligibleFour={isEligible.requirement_four}\r\n                          ineligibleOne={notEligible.requirement_one}\r\n                          ineligibleTwo={notEligible.requirement_two}\r\n                          ineligibleThree={notEligible.requirement_three}\r\n                          ineligibleFour={notEligible.requirement_four}\r\n                          status={item.detail[0].status}\r\n                          btnName={\"Participate\"}\r\n                        ></Card>\r\n                      </>\r\n                    ))\r\n                )\r\n            )\r\n          )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../../components/card/Cards\";\r\nimport trials from \"../../stimulate-backend/data/future-trials.json\";\r\n\r\nexport default function FutureCards(props) {\r\n  return (\r\n    <>\r\n      {/* show only 4 cards  */}\r\n      {/* {console.log(trials)} */}\r\n      {trials &&\r\n        trials\r\n          .sort(function (a, b) {\r\n            return b.id - a.id;\r\n          })\r\n          .slice(0, props.slice)\r\n          .map((item, index) =>\r\n            item.eligibility.map(\r\n              (i) =>\r\n                i.eligible &&\r\n                i.eligible.map(\r\n                  (isEligible) =>\r\n                    i.ineligible &&\r\n                    i.ineligible.map((notEligible) => (\r\n                      //   console.log(notEligible),\r\n                      //   console.log(isEligible),\r\n                      <>\r\n                        <Card\r\n                          key={index}\r\n                          id={item.id}\r\n                          price={item.price}\r\n                          title={item.title}\r\n                          eligibility={item.participants}\r\n                          eligibleOne={isEligible.requirement_one}\r\n                          eligibleTwo={isEligible.requirement_two}\r\n                          eligibleThree={isEligible.requirement_three}\r\n                          eligibleFour={isEligible.requirement_four}\r\n                          ineligibleOne={notEligible.requirement_one}\r\n                          ineligibleTwo={notEligible.requirement_two}\r\n                          ineligibleThree={notEligible.requirement_three}\r\n                          ineligibleFour={notEligible.requirement_four}\r\n                          status={item.detail[0].status}\r\n                          btnName={\"Discover\"}\r\n                        ></Card>\r\n                      </>\r\n                    ))\r\n                )\r\n            )\r\n          )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Image,\r\n  Card,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Cards(props) {\r\n  const navigate = useNavigate();\r\n  const { submit } = useSelector((state) => ({ ...state }));\r\n  const { qualified, notQualified } = submit;\r\n  return (\r\n    <Container className='card-container '>\r\n      <Card className='card'>\r\n        {props.submitPrice ? (\r\n          <Card.Title\r\n            as='h5'\r\n            className='price-banner d-flex justify-content-center'\r\n          >\r\n            ${props.submitPrice}\r\n          </Card.Title>\r\n        ) : null}\r\n        <Card.Header className='card-header-css primary-font'>\r\n          {props.title}\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{props.participants}</Card.Title>\r\n          <Card.Title className='title-header'>{props.eligibility}</Card.Title>\r\n          <Row>\r\n            <Col xs={6}>\r\n              {qualified[0]\r\n                ? qualified[0].map((data) => (\r\n                    <Card.Body>\r\n                      <FaCheck className='green-color' /> {data}\r\n                    </Card.Body>\r\n                  ))\r\n                : null}\r\n            </Col>{\" \"}\r\n            <Col xs={6}>\r\n              {notQualified[0]\r\n                ? notQualified[0].map((data) => (\r\n                    <Card.Body>\r\n                      <FaTimes className='red-color' /> {data}\r\n                    </Card.Body>\r\n                  ))\r\n                : null}\r\n            </Col>\r\n          </Row>{\" \"}\r\n          <Col className='top-10'>\r\n            {props.status === \"Recruiting\" ? (\r\n              <Card.Body>\r\n                <h5>\r\n                  Status: <span className='green-color'>{props.status}</span>\r\n                </h5>\r\n              </Card.Body>\r\n            ) : props.status === \"Not Recruiting\" ? (\r\n              <Card.Body>\r\n                <h5>\r\n                  Status: <span className='red-color'>{props.status}</span>\r\n                </h5>\r\n              </Card.Body>\r\n            ) : null}\r\n          </Col>\r\n        </Card.Body>\r\n        <Button\r\n          variant='primary'\r\n          className='card-primary-color-btn '\r\n          onClick={() =>\r\n            props.btnName === \"Learn More\"\r\n              ? navigate(`latest/submit/${props.id}`, { replace: true })\r\n              : props.btnName === \"Participate\"\r\n              ? navigate(`conflict-free/${props.id}`)\r\n              : props.btnName === \"Discover\"\r\n              ? navigate(`discover/${props.id}`)\r\n              : null\r\n          }\r\n        >\r\n          {props.btnName}\r\n        </Button>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CardSubmit from \"../../components/card/CardSubmit\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function SubmitCard() {\r\n  const { submit } = useSelector((state) => ({ ...state }));\r\n  const { title, trialID, participants, payout, status } = submit;\r\n\r\n  return (\r\n    <>\r\n      <CardSubmit\r\n        key={trialID}\r\n        id={trialID}\r\n        submitPrice={status.match(\"Not Recruiting\") ? null : payout}\r\n        title={title}\r\n        eligibility={participants}\r\n        status={status}\r\n        btnName={status.match(\"Not Recruiting\") ? \"Discover\" : \"Learn More\"}\r\n      ></CardSubmit>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function CreateAccountModal(props) {\r\n  const { onHide, fname, cname } = props;\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  return (\r\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter ' centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title className='primary-color margin-left-percent-33 '>\r\n          {auth.isLoggedIn ? `Sorry,${fname}` : `Sorry,${cname}`}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {auth.isLoggedIn ? (\r\n          <p className='modal-header-p font-weight-200 margin-left-percent-9  font-size-18 '>\r\n            Trial Submissions available only to clinical users.\r\n          </p>\r\n        ) : (\r\n          <p className='modal-header-p font-weight-200 margin-left-percent-9  font-size-18 '>\r\n            Trial applications available only to participants.\r\n          </p>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal>\r\n        <Button onClick={onHide}>Close</Button>\r\n      </Modal>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Col, Row, Button, Image } from \"react-bootstrap\";\r\nimport Explore from \"../../image/explore.png\";\r\nimport LatestCard from \"../Card/LatestCard\";\r\nimport ConflictCard from \"../Card/ConflictCard\";\r\nimport FutureCard from \"../Card/FutureCards\";\r\nimport SubmitCard from \"../Card/SubmitCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CreateAccountModal from \"../../components/modals/CreateAccountModal\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Home() {\r\n  // submit\r\n  const [alertModal, setAlertModal] = useState(false);\r\n  const [alertApplyModal, setAlertApplyModal] = useState(false);\r\n  const [active, setActive] = useState(\"participants\");\r\n  const { auth, submit } = useSelector((state) => ({ ...state }));\r\n  const { title, payout, qualified, notQualified, prerequisite, status } =\r\n    submit;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <section className='jumbotron gradient hero'>\r\n          <Container fluid>\r\n            <Col>\r\n              <p className='lead white-color hero-text primary-font font-size-sm'>\r\n                Our goal is to help medical companies find participants for\r\n                trials, and for participants to get paid for finished trials.\r\n              </p>\r\n              <div className='button-mobile'>\r\n                <Button\r\n                  variant='outline-primary  bg-white-btn submit-btn'\r\n                  onClick={() => {\r\n                    auth.clinicalLoggedIn\r\n                      ? navigate(\"/submit-trials\")\r\n                      : auth.isLoggedIn\r\n                      ? setActive(\"participants\") || setAlertModal(true)\r\n                      : navigate(\"/submit-trials\");\r\n                  }}\r\n                >\r\n                  Submit Trials\r\n                </Button>\r\n                <Button\r\n                  variant='outline-primary outline-white apply-btn'\r\n                  onClick={() => {\r\n                    auth.isLoggedIn\r\n                      ? navigate(\"/participate\")\r\n                      : auth.clinicalLoggedIn\r\n                      ? setActive(\"clinical\") || setAlertApplyModal(true)\r\n                      : navigate(\"/participate\");\r\n                  }}\r\n                >\r\n                  Apply Now\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Image src={Explore} rounded alt='explore' className='hero-img' />\r\n            </Col>\r\n          </Container>\r\n        </section>\r\n        <section>\r\n          <Container fluid>\r\n            <h2 className='margin-left-50 header-color primary-font font-weight-bold'>\r\n              Latest Trials\r\n            </h2>\r\n            <div className='d-flex flex-wrap'>\r\n              {!title ||\r\n              !qualified ||\r\n              !prerequisite ||\r\n              !notQualified ||\r\n              !payout ||\r\n              status.match(\"Not Recruiting\") ? null : (\r\n                <SubmitCard />\r\n              )}\r\n\r\n              <LatestCard slice='4' />\r\n            </div>\r\n          </Container>\r\n        </section>\r\n        <section className='margin-top-10'>\r\n          <Container fluid>\r\n            <h2 className='margin-left-50 header-color primary-font font-weight-bold'>\r\n              Participate without conflictions\r\n            </h2>\r\n            <div className='d-flex flex-wrap'>\r\n              <ConflictCard slice='4' />\r\n            </div>\r\n          </Container>\r\n        </section>\r\n        <section className='margin-top-10'>\r\n          <Container fluid>\r\n            <h2 className='margin-left-50 header-color primary-font font-weight-bold'>\r\n              Discover future trials\r\n            </h2>\r\n            <div className='d-flex flex-wrap'>\r\n              {!title ||\r\n              !qualified ||\r\n              !prerequisite ||\r\n              !notQualified ||\r\n              !payout ||\r\n              !status.match(\"Not Recruiting\") ? null : (\r\n                <SubmitCard />\r\n              )}\r\n              <FutureCard slice='4' />\r\n            </div>\r\n          </Container>\r\n        </section>\r\n      </main>\r\n      <ToastContainer />\r\n      {active === \"participants\" && (\r\n        <CreateAccountModal\r\n          fname={auth.firstName}\r\n          show={alertModal}\r\n          onHide={() => {\r\n            setAlertModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n\r\n      {active === \"clinical\" && (\r\n        <CreateAccountModal\r\n          cname={auth.companyName}\r\n          show={alertApplyModal}\r\n          onHide={() => {\r\n            setAlertApplyModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Card, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nexport default function SubmitTrial({\r\n  title,\r\n  setTitle,\r\n  participants,\r\n  setParticipants,\r\n  handleFormSubmit,\r\n  payout,\r\n  setPayout,\r\n  description,\r\n  setDescription,\r\n  qualified,\r\n  notQualified,\r\n  setQualified,\r\n  setNotQualified,\r\n  prerequisite,\r\n  setPrerequisite,\r\n  location,\r\n  setLocation,\r\n  status,\r\n  setStatus,\r\n  start,\r\n  setStart,\r\n  end,\r\n  setEnd,\r\n  SignInModal,\r\n  ParticipantAuthModal,\r\n  ClinicalAuthModal,\r\n  showModal,\r\n  setShowModal,\r\n  showClincicalModal,\r\n  setShowClincicalModal,\r\n  showSignInModal,\r\n  setShowSignInModal,\r\n  active,\r\n  setActive,\r\n  clinicalLoggedIn,\r\n  priceError,\r\n  startError,\r\n  endError,\r\n  locationError,\r\n  studyType,\r\n  setStudyType,\r\n  commaError,\r\n  commaTwoError,\r\n  aptno,\r\n  setAptno,\r\n  citystate,\r\n  setCityState,\r\n  zipcode,\r\n  setZipcode,\r\n}) {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  return (\r\n    <>\r\n      <Container>\r\n        <section className='margin-top-10 margin-right-sm'>\r\n          <h1 className='font-size-md primary-color text-center  '>\r\n            Schedule A Medical Trial\r\n          </h1>\r\n          <Card className='margin-auto width-450 height-auto '>\r\n            <p className='font-size-xsm margin-left-70 top-10 red-color'>\r\n              All fields with * are required.\r\n            </p>\r\n            <Container fluid className='top-5'>\r\n              <Form className='margin-top-sm font-size-xsm'>\r\n                <Form.Group className='mb-3 form-group-control '>\r\n                  <Form.Label>\r\n                    Trial Title <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as='textarea'\r\n                    placeholder='Long-term Safety and Efficacy Study for  Individuals Who Are Long Term Smokers '\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    maxLength='100'\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Participants <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Smokers'\r\n                    rows={4}\r\n                    value={participants}\r\n                    onChange={(e) => setParticipants(e.target.value)}\r\n                    maxLength='100'\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Description <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as='textarea'\r\n                    placeholder='Trial Description'\r\n                    rows={4}\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    maxLength='300'\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Who may participate <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as='textarea'\r\n                    id='isQualified'\r\n                    placeholder='Smoker, 18+ years, Gender Neutral'\r\n                    rows={4}\r\n                    value={qualified}\r\n                    onChange={(e) => setQualified(e.target.value)}\r\n                    maxLength='100'\r\n                  />\r\n                  {commaError && (\r\n                    <Form.Label className='red-color top5 font-size-14'>\r\n                      {commaError}\r\n                    </Form.Label>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Who may not participate <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as='textarea'\r\n                    id='notQualified'\r\n                    placeholder='Non-smokers, 17 years and under'\r\n                    rows={4}\r\n                    value={notQualified}\r\n                    onChange={(e) => setNotQualified(e.target.value)}\r\n                    maxLength='100'\r\n                  />\r\n                  {commaTwoError && (\r\n                    <Form.Label className='red-color top5 font-size-14'>\r\n                      {commaTwoError}\r\n                    </Form.Label>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Any Prerequisite? <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as='textarea'\r\n                    placeholder='Negative allergic test results'\r\n                    value={prerequisite}\r\n                    onChange={(e) => setPrerequisite(e.target.value)}\r\n                    maxLength='100'\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Container>\r\n          </Card>\r\n\r\n          <Card className='margin-auto width-450 height-auto top-10 padding-10'>\r\n            <Container fluid className='margin-top-sm'>\r\n              <Form.Label className='form-group-control font-size-sm primary-color'>\r\n                Trial's Location\r\n              </Form.Label>\r\n              <Row className='row-width-margin'>\r\n                <Form.Group as={Col} id='userAddress'>\r\n                  <Form.Label>\r\n                    Street Address <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder={auth.address}\r\n                    value={location}\r\n                    onChange={(e) => {\r\n                      setLocation(e.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} id='userAptno'>\r\n                  <Form.Label>Apt, Suite, Bldg</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder={auth.aptno}\r\n                    value={aptno}\r\n                    onChange={(e) => {\r\n                      setAptno(e.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row className='row-width-margin'>\r\n                <Form.Group as={Col} id='userCityState'>\r\n                  <Form.Label>\r\n                    City, State <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder={auth.citystate}\r\n                    value={citystate}\r\n                    onChange={(e) => {\r\n                      setCityState(e.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} id='userZipcode'>\r\n                  <Form.Label>\r\n                    Zipcode <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder={auth.zipcode}\r\n                    value={zipcode}\r\n                    onChange={(e) => {\r\n                      setZipcode(e.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n            </Container>\r\n          </Card>\r\n\r\n          <Card className='margin-auto width-450 height-auto top-20'>\r\n            <Container fluid className=''>\r\n              <Form className='margin-top-sm font-size-xsm'>\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Payout <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='50'\r\n                    min='0'\r\n                    value={payout}\r\n                    onChange={(e) => setPayout(e.target.value)}\r\n                  />\r\n                  {priceError && (\r\n                    <Form.Label className='red-color top5 font-size-14'>\r\n                      {priceError}\r\n                    </Form.Label>\r\n                  )}\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Trial Status <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Select\r\n                    aria-label='Default select example'\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                  >\r\n                    <option>Select status</option>\r\n                    <option value='Recruiting'>Recruiting</option>\r\n                    <option value='Not Recruiting'>Not Recruiting</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className='mb-3 form-group-control'>\r\n                  <Form.Label>\r\n                    Study Type <span className='red-color'>*</span>\r\n                  </Form.Label>\r\n                  <Form.Select\r\n                    aria-label='Default select example'\r\n                    value={studyType}\r\n                    onChange={(e) => setStudyType(e.target.value)}\r\n                  >\r\n                    <option>Select type</option>{\" \"}\r\n                    <option value='Interventional'>Interventional</option>\r\n                    <option value='Observational'>Observational</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n                <Row className='form-row'>\r\n                  <Form.Group className='mb-3'>\r\n                    <Form.Label>\r\n                      Start Date <span className='red-color'>*</span>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='11/20/2021'\r\n                      className='form-control-width'\r\n                      value={start}\r\n                      onChange={(e) => setStart(e.target.value)}\r\n                      maxLength='10'\r\n                    />\r\n                    {startError && (\r\n                      <Form.Label className='red-color top5 font-size-14'>\r\n                        {startError}\r\n                      </Form.Label>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className='mb-3'>\r\n                    <Form.Label>\r\n                      End Date <span className='red-color'>*</span>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='03/20/2022'\r\n                      className='form-control-width'\r\n                      value={end}\r\n                      onChange={(e) => setEnd(e.target.value)}\r\n                      maxLength='10'\r\n                    />\r\n                    {endError && (\r\n                      <Form.Label className='red-color top5 font-size-14'>\r\n                        {endError}\r\n                      </Form.Label>\r\n                    )}\r\n                  </Form.Group>\r\n                </Row>\r\n              </Form>\r\n            </Container>\r\n          </Card>\r\n          <Card className='margin-auto width-450 height-auto margin-top-sm top-20 padding-10'>\r\n            <Container fluid className='margin-top-sm'>\r\n              <Form.Group className='width-200 left-20'>\r\n                <p className=''>\r\n                  <span>*</span> All trials must be reviewed and accepted before\r\n                  scheduling.\r\n                </p>\r\n                <p>\r\n                  <span>*</span> By submitting for review, I have agreed to{\" \"}\r\n                  <Link to='#' className='primary-color'>\r\n                    Terms and conditions\r\n                  </Link>\r\n                  .\r\n                </p>\r\n              </Form.Group>\r\n              <Form.Group className='left-20 '>\r\n                <Button\r\n                  disabled={\r\n                    priceError ||\r\n                    !qualified ||\r\n                    !notQualified ||\r\n                    !studyType ||\r\n                    !title ||\r\n                    !participants ||\r\n                    !citystate ||\r\n                    !zipcode ||\r\n                    !payout ||\r\n                    !prerequisite ||\r\n                    !location ||\r\n                    !status ||\r\n                    !start ||\r\n                    !end\r\n                  }\r\n                  variant='primary'\r\n                  className='card-primary-color-btn width-308 bottom-3'\r\n                  onClick={(e) => {\r\n                    clinicalLoggedIn\r\n                      ? handleFormSubmit(e)\r\n                      : setActive(\"clinical\") || setShowClincicalModal(true);\r\n                  }}\r\n                >\r\n                  Submit For Review\r\n                </Button>\r\n              </Form.Group>\r\n            </Container>\r\n          </Card>\r\n        </section>\r\n      </Container>\r\n      {active === \"signin\" && (\r\n        <SignInModal\r\n          show={showSignInModal}\r\n          onHide={() => setShowSignInModal(false)}\r\n          setShowModal={setShowModal}\r\n          setActive={setActive}\r\n        />\r\n      )}{\" \"}\r\n      {active === \"clinical\" && (\r\n        <ClinicalAuthModal\r\n          show={showClincicalModal}\r\n          onHide={() => setShowClincicalModal(false)}\r\n          setShowModal={setShowModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setActive={setActive}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n        />\r\n      )}\r\n      {active === \"participant\" && (\r\n        <ParticipantAuthModal\r\n          show={showModal}\r\n          onHide={() => setShowModal(false)}\r\n          setActive={setActive}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowModal={setShowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function SignInForm({\r\n  setActive,\r\n  setShowModal,\r\n  email,\r\n  password,\r\n  setEmail,\r\n  setPassword,\r\n  handleFormSubmit,\r\n  setShowSignInModal,\r\n  clinicalLoggedIn,\r\n  isLoggedIn,\r\n}) {\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='JohnDoe@health.gov'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Button\r\n            onClick={() => {\r\n              //   setActive(\"participant\");\r\n              //   setShowModal(true);\r\n            }}\r\n            className='button-link left120'\r\n          >\r\n            Forgot Password?\r\n          </Button>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='*******'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Button\r\n            variant='outline-primary'\r\n            className='primary-color-btn'\r\n            onClick={(e) => {\r\n              handleFormSubmit(e);\r\n              // setShowSignInModal(true);\r\n            }}\r\n          >\r\n            SIGN IN\r\n          </Button>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control form-group-control-last top5'>\r\n          <Form.Label>Need an account?</Form.Label>\r\n          <Button\r\n            onClick={() => {\r\n              setActive(\"participant\");\r\n              setShowModal(true);\r\n            }}\r\n            className='button-link '\r\n          >\r\n            Sign Up Free\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","export const setUserFirstName = (firstName) => ({\r\n  type: \"SET_USER_FIRST_NAME\",\r\n  firstName,\r\n});\r\nexport const setUserLastName = (lastName) => ({\r\n  type: \"SET_USER_LAST_NAME\",\r\n  lastName,\r\n});\r\nexport const setUserEmail = (email) => ({\r\n  type: \"SET_USER_EMAIL\",\r\n  email,\r\n});\r\nexport const setUserAddress = (address) => ({\r\n  type: \"SET_USER_ADDRESS\",\r\n  address,\r\n});\r\nexport const setUserAptNo = (aptno) => ({\r\n  type: \"SET_USER_APTNO\",\r\n  aptno,\r\n});\r\nexport const setUserCityState = (citystate) => ({\r\n  type: \"SET_USER_CITYSTATE\",\r\n  citystate,\r\n});\r\nexport const setUserZipcode = (zipcode) => ({\r\n  type: \"SET_USER_ZIPCODE\",\r\n  zipcode,\r\n});\r\nexport const setUserPassword = (password) => ({\r\n  type: \"SET_USER_PASSWORD\",\r\n  password,\r\n});\r\nexport const setUserID = (userId) => ({\r\n  type: \"SET_USER_ID\",\r\n  userId,\r\n});\r\nexport const setIsLoggedIn = (isLoggedIn) => ({\r\n  type: \"SET_USER_IS_LOGGED_IN\",\r\n  isLoggedIn,\r\n});\r\n\r\nexport const setCompanyName = (companyName) => ({\r\n  type: \"SET_USER_COMPANY_NAME\",\r\n  companyName,\r\n});\r\n\r\nexport const setClinicalEmail = (clinicalEmail) => ({\r\n  type: \"SET_USER_CLINICAL_EMAIL\",\r\n  clinicalEmail,\r\n});\r\nexport const setClinicalPassword = (clinicalPassword) => ({\r\n  type: \"SET_USER_CLINICAL_PASSWORD\",\r\n  clinicalPassword,\r\n});\r\nexport const setClinicalID = (clinicalID) => ({\r\n  type: \"SET_USER_CLINICAL_ID\",\r\n  clinicalID,\r\n});\r\nexport const setClinicalLoggedIn = (clinicalLoggedIn) => ({\r\n  type: \"SET_USER_CLINICAL_LOGGED_IN\",\r\n  clinicalLoggedIn,\r\n});\r\n\r\nexport const deleteUserInfo = () =>({\r\n  type: 'DELETE_USER_INFO',\r\n})\r\n","import React, { useState } from \"react\";\r\nimport SignInForm from \"./SignInForm\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setIsLoggedIn,\r\n  setClinicalLoggedIn,\r\n} from \"../../redux/actions/authAction\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function SignInFormData({\r\n  setActive,\r\n  setShowModal,\r\n  setShowSignInModal,\r\n}) {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { clinicalLoggedIn, isLoggedIn } = auth;\r\n  const reduxPass = auth.password;\r\n  const reduxEmail = auth.email;\r\n  const reduxClinicalPass = auth.clinicalPassword;\r\n  const reduxClinicalEmail = auth.clinicalEmail;\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    isSignedIn(email, password);\r\n  };\r\n\r\n  const isSignedIn = (email, password) => {\r\n    if (reduxEmail === email && reduxPass === password) {\r\n      dispatch(setIsLoggedIn(true));\r\n      toast.success(`Welcome back, ${email}`);\r\n      setShowSignInModal(false);\r\n    } else if (reduxClinicalEmail === email && reduxClinicalPass === password) {\r\n      console.log(reduxClinicalEmail === email);\r\n      dispatch(setClinicalLoggedIn(true));\r\n      toast.success(`Welcome back, ${email}`);\r\n      setShowSignInModal(false);\r\n    } else if (\r\n      (reduxEmail !== email && reduxPass !== password) ||\r\n      (reduxClinicalEmail !== email && reduxClinicalPass !== password)\r\n    ) {\r\n      dispatch(setIsLoggedIn(false));\r\n      dispatch(setClinicalLoggedIn(false));\r\n      toast.success(`Email or Password is incorrect`);\r\n      setShowSignInModal(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SignInForm\r\n      setActive={setActive}\r\n      setShowModal={setShowModal}\r\n      email={email}\r\n      password={password}\r\n      setPassword={setPassword}\r\n      setEmail={setEmail}\r\n      handleFormSubmit={handleFormSubmit}\r\n      isSignedIn={isSignedIn}\r\n      setShowSignInModal={setShowSignInModal}\r\n      clinicalLoggedIn={clinicalLoggedIn}\r\n      isLoggedIn={isLoggedIn}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignInFormData from \"../form/SignInFormData\";\r\nexport default function signInModal(props) {\r\n  const { onHide, setActive, setShowModal, setShowSignInModal } = props;\r\n  return (\r\n    <>\r\n      <Modal\r\n        {...props}\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='primary-color title-modal text-center margin-left-142'>\r\n            Welcome back!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <SignInFormData\r\n            setActive={setActive}\r\n            setShowModal={setShowModal}\r\n            setShowSignInModal={setShowSignInModal}\r\n          />\r\n        </Modal.Body>\r\n        <Modal>\r\n          <Button onClick={onHide}>Close</Button>\r\n        </Modal>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ParticipantAuthForm({\r\n  setActive,\r\n  setShowSignInModal,\r\n  setShowClincicalModal,\r\n  first,\r\n  setFirst,\r\n  last,\r\n  setLast,\r\n  email,\r\n  setEmail,\r\n  password,\r\n  setPassword,\r\n  handleFormSubmit,\r\n  passwordReveal,\r\n  showPassword,\r\n  setShowPassword,\r\n  FaEye,\r\n  FaEyeSlash,\r\n  setShowModal,\r\n  firstNameError,\r\n  lastNameError,\r\n  emailError,\r\n  passwordError,\r\n}) {\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Row className='form-row'>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='John'\r\n              className='form-control-width'\r\n              value={first}\r\n              onChange={(e) => setFirst(e.target.value)}\r\n            />\r\n            {firstNameError && (\r\n              <Form.Label className='red-color top5'>\r\n                {firstNameError}\r\n              </Form.Label>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Doe'\r\n              className='form-control-width'\r\n              value={last}\r\n              onChange={(e) => setLast(e.target.value)}\r\n            />\r\n            {lastNameError && (\r\n              <Form.Label className='red-color top5'>\r\n                {lastNameError}\r\n              </Form.Label>\r\n            )}\r\n          </Form.Group>\r\n        </Row>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='JohnDoe@health.gov'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {emailError && (\r\n            <Form.Label className='red-color top5'>{emailError}</Form.Label>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            id='password-input'\r\n            type='password'\r\n            placeholder='*******'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span\r\n            id='eye'\r\n            className='toggle-password primary-color cursor-pointer'\r\n            onClick={() => passwordReveal(showPassword, setShowPassword)}\r\n          >\r\n            {!showPassword ? <FaEye /> : <FaEyeSlash />}\r\n          </span>\r\n          {passwordError && (\r\n            <Form.Label className='red-color top5'>{passwordError}</Form.Label>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>\r\n            By signing up, I accept Participaid‘s{\" \"}\r\n            <Link to='#' className='primary-color '>\r\n              Terms and Conditions\r\n            </Link>\r\n          </Form.Label>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Button\r\n            type='submit'\r\n            disabled={\r\n              firstNameError ||\r\n              lastNameError ||\r\n              emailError ||\r\n              passwordError ||\r\n              !first ||\r\n              !last ||\r\n              !email ||\r\n              !password\r\n            }\r\n            variant='outline-primary'\r\n            className='primary-color-btn'\r\n            onClick={(e) => {\r\n              handleFormSubmit(e);\r\n              setShowModal(false);\r\n            }}\r\n          >\r\n            SIGN UP, IT'S FREE\r\n          </Button>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Already have an account?</Form.Label>\r\n          <Button\r\n            onClick={() => {\r\n              setActive(\"signin\");\r\n              setShowSignInModal(true);\r\n            }}\r\n            className='button-link'\r\n          >\r\n            Sign in\r\n          </Button>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control form-group-control-last'>\r\n          <Form.Label>Need a clinical account?</Form.Label>\r\n          <Button\r\n            onClick={() => {\r\n              setActive(\"clinical\");\r\n              setShowClincicalModal(true);\r\n            }}\r\n            className='button-link'\r\n          >\r\n            Sign Up Free\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","export const passwordReveal = (showPassword, setShowPassword) => {\r\n  const passwordInput = document.getElementById(\"password-input\");\r\n  if (!showPassword) {\r\n    passwordInput.setAttribute(\"type\", \"text\");\r\n    setShowPassword(true);\r\n  } else {\r\n    passwordInput.setAttribute(\"type\", \"password\");\r\n    setShowPassword(false);\r\n  }\r\n};\r\n","// Validator for last and first name\r\nexport const nameValidation = (nameType, name, setError) => {\r\n  const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*){0,39}$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (nameType.length >= 40 || !nameType.match(nameRegex)) {\r\n        setError(`${name} can only be 40 characters.`);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const emailValidation = (nameType, setError) => {\r\n  const emailRegex =\r\n    /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n  if (!nameType.match(emailRegex)) {\r\n    setError(\"Enter a valid email.\");\r\n  } else {\r\n    setError(\"\");\r\n  }\r\n};\r\n\r\nexport const passwordValidation = (nameType, setError) => {\r\n  const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n  if (!nameType.match(passwordRegex)) {\r\n    setError(\r\n      \"Password must be 6 to 20 characters with one numeric digit, uppercase and lowercase letter \"\r\n    );\r\n  } else {\r\n    setError(\"\");\r\n  }\r\n};\r\n\r\nexport const addressValidations = (nameType, name, setError) => {\r\n  const addressRegex = /^[a-zA-Z0-9\\s,'-]*$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (!nameType.match(addressRegex)) {\r\n        setError(`Invalid ${name} type`);\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const priceValidation = (nameType, name, setError) => {\r\n  const nonNegNumRegex = /^[0-9]+$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (!nameType.match(nonNegNumRegex)) {\r\n        setError(`Invalid ${name}. `);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const dateValidation = (nameType, name, setError) => {\r\n  const dateRegex =\r\n    /^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (!nameType.match(dateRegex)) {\r\n        setError(`Incorrect date format. must be in mm/dd/yyyy `);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const containCommasValidations = (nameType, setError) => {\r\n  if (nameType.includes(\",\") === false) {\r\n    setError(\"Please use the following format: A,B,C or A, B, C\");\r\n  } else {\r\n    setError(\"\");\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ParticipantAuthForm from \"./ParticipantAuthForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setUserFirstName,\r\n  setUserLastName,\r\n  setUserEmail,\r\n  setUserPassword,\r\n  setUserID,\r\n  setIsLoggedIn,\r\n} from \"../../redux/actions/authAction\";\r\nimport { nanoid } from \"nanoid/async\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport { passwordReveal } from \"../passwordToggle/PasswordReveal\";\r\nimport {\r\n  nameValidation,\r\n  emailValidation,\r\n  passwordValidation,\r\n} from \"../formValidation/FormValidation\";\r\nimport { toast } from \"react-toastify\";\r\nexport default function ParticipantFormData({\r\n  setActive,\r\n  setShowSignInModal,\r\n  setShowClincicalModal,\r\n  setShowModal,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [first, setFirst] = useState(\"\");\r\n  const [last, setLast] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [firstNameError, setFirstNameError] = useState(\"\");\r\n  const [lastNameError, setLastNameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState();\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    first && nameValidation(first, \"First name\", setFirstNameError);\r\n    last && nameValidation(last, \"Last name\", setLastNameError);\r\n    password && passwordValidation(password, setPasswordError);\r\n    email && emailValidation(email, setEmailError);\r\n  }, [first, last, email, password]);\r\n  const handleFormSubmit = async (e) => {\r\n    const Id = await nanoid(4);\r\n    e.preventDefault();\r\n    dispatch(setUserFirstName(first));\r\n    dispatch(setUserLastName(last));\r\n    dispatch(setUserEmail(email));\r\n    dispatch(setUserPassword(password));\r\n    dispatch(setUserID(Id));\r\n    dispatch(setIsLoggedIn(true));\r\n    toast.success(`${email} has signed up successfully!`);\r\n  };\r\n\r\n  return (\r\n    <ParticipantAuthForm\r\n      setActive={setActive}\r\n      setShowSignInModal={setShowSignInModal}\r\n      setShowClincicalModal={setShowClincicalModal}\r\n      first={first}\r\n      setFirst={setFirst}\r\n      last={last}\r\n      setLast={setLast}\r\n      email={email}\r\n      setEmail={setEmail}\r\n      password={password}\r\n      setPassword={setPassword}\r\n      handleFormSubmit={handleFormSubmit}\r\n      showPassword={showPassword}\r\n      setShowPassword={setShowPassword}\r\n      FaEye={FaEye}\r\n      FaEyeSlash={FaEyeSlash}\r\n      passwordReveal={passwordReveal}\r\n      setShowModal={setShowModal}\r\n      firstNameError={firstNameError}\r\n      lastNameError={lastNameError}\r\n      emailError={emailError}\r\n      passwordError={passwordError}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ParticipantFormData from \"../form/ParticipantFormData\";\r\n\r\nexport default function ModalForm(props) {\r\n  const {\r\n    onHide,\r\n    setActive,\r\n    setShowClincicalModal,\r\n    setShowSignInModal,\r\n    setShowModal,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <Modal\r\n        {...props}\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className='primary-color title-modal'>\r\n            Welcome to Participaid\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <p className='modal-header-p'>\r\n          To get started, sign up for a participants account\r\n        </p>\r\n\r\n        <Modal.Body>\r\n          <ParticipantFormData\r\n            setActive={setActive}\r\n            setShowClincicalModal={setShowClincicalModal}\r\n            setShowSignInModal={setShowSignInModal}\r\n            setShowModal={setShowModal}\r\n          />\r\n        </Modal.Body>\r\n        <Modal>\r\n          <Button onClick={onHide}>Close</Button>\r\n        </Modal>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ClinicalAuthForm({\r\n  setActive,\r\n  setShowSignInModal,\r\n  setShowModal,\r\n  name,\r\n  email,\r\n  password,\r\n  setName,\r\n  setEmail,\r\n  setPassword,\r\n  handleFormSubmit,\r\n  passwordReveal,\r\n  showPassword,\r\n  setShowPassword,\r\n  FaEye,\r\n  FaEyeSlash,\r\n  setShowClincicalModal,\r\n  nameError,\r\n  emailError,\r\n  passwordError,\r\n}) {\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Company's Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Participaid'\r\n            value={name}\r\n            maxLength='40'\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          {nameError && (\r\n            <Form.Label className='red-color top5'>{nameError}</Form.Label>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Participaid@hr.com'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {emailError && (\r\n            <Form.Label className='red-color top5'>{emailError}</Form.Label>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Password</Form.Label>\r\n\r\n          <Form.Control\r\n            id='password-input'\r\n            type='password'\r\n            placeholder='*********'\r\n            maxLength='21'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span\r\n            id='eye'\r\n            className='toggle-password primary-color cursor-pointer'\r\n            onClick={() => passwordReveal(showPassword, setShowPassword)}\r\n          >\r\n            {!showPassword ? <FaEye /> : <FaEyeSlash />}\r\n          </span>\r\n          {passwordError && (\r\n            <Form.Label className='red-color top5'>{passwordError}</Form.Label>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>\r\n            By signing up, I accept Participaid‘s{\" \"}\r\n            <Link to='#' className='primary-color '>\r\n              Terms and Conditions\r\n            </Link>\r\n          </Form.Label>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Button\r\n            type='submit'\r\n            disabled={\r\n              nameError ||\r\n              emailError ||\r\n              passwordError ||\r\n              !name ||\r\n              !email ||\r\n              !password\r\n            }\r\n            variant='outline-primary'\r\n            className='primary-color-btn'\r\n            onClick={(e) => {\r\n              handleFormSubmit(e);\r\n              setShowClincicalModal(false);\r\n            }}\r\n          >\r\n            SIGN UP, IT'S FREE\r\n          </Button>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Already have an account?</Form.Label>\r\n          <Button\r\n            onClick={() => {\r\n              setActive(\"signin\");\r\n              setShowSignInModal(true);\r\n            }}\r\n            className='button-link'\r\n          >\r\n            Sign in\r\n          </Button>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control form-group-control-last'>\r\n          <Form.Label>Need a participants account?</Form.Label>\r\n          <Button\r\n            type='submit'\r\n            onClick={() => {\r\n              setActive(\"participant\");\r\n              setShowModal(true);\r\n            }}\r\n            className='button-link'\r\n          >\r\n            Sign Up Free\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ClinicalAuthForm from \"./ClinicalAuthForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setCompanyName,\r\n  setClinicalEmail,\r\n  setClinicalPassword,\r\n  setClinicalID,\r\n  setClinicalLoggedIn,\r\n} from \"../../redux/actions/authAction\";\r\nimport { nanoid } from \"nanoid/async\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport { passwordReveal } from \"../passwordToggle/PasswordReveal\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  nameValidation,\r\n  emailValidation,\r\n  passwordValidation,\r\n} from \"../formValidation/FormValidation\";\r\n\r\nexport default function ClinicalFormData({\r\n  setActive,\r\n  setShowSignInModal,\r\n  setShowModal,\r\n  setShowClincicalModal,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  //Company name state\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState();\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    name && nameValidation(name, \"Company's Name\", setNameError);\r\n    email && emailValidation(email, setEmailError);\r\n    password && passwordValidation(password, setPasswordError);\r\n  }, [name, email, password]);\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    const Id = await nanoid(4);\r\n    e.preventDefault();\r\n    dispatch(setCompanyName(name));\r\n    dispatch(setClinicalEmail(email));\r\n    dispatch(setClinicalPassword(password));\r\n    dispatch(setClinicalID(Id));\r\n    dispatch(setClinicalLoggedIn(true));\r\n    toast.success(`${email} has signed up successfully!`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ClinicalAuthForm\r\n        setActive={setActive}\r\n        setShowSignInModal={setShowSignInModal}\r\n        setShowModal={setShowModal}\r\n        name={name}\r\n        setName={setName}\r\n        email={email}\r\n        setEmail={setEmail}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        handleFormSubmit={handleFormSubmit}\r\n        passwordReveal={passwordReveal}\r\n        showPassword={showPassword}\r\n        setShowPassword={setShowPassword}\r\n        FaEye={FaEye}\r\n        FaEyeSlash={FaEyeSlash}\r\n        setShowClincicalModal={setShowClincicalModal}\r\n        nameError={nameError}\r\n        emailError={emailError}\r\n        passwordError={passwordError}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ClinicalFormData from \"../form/ClinicalFormData\";\r\nexport default function ClinicalAuthModal(props) {\r\n  const {\r\n    onHide,\r\n    setActive,\r\n    setShowModal,\r\n    setShowSignInModal,\r\n    setShowClincicalModal,\r\n  } = props;\r\n  return (\r\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter' centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title className='primary-color title-modal'>\r\n          Welcome to Participaid\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <p className='modal-header-p'>\r\n        To get started, sign up for a clinical account\r\n      </p>\r\n      <Modal.Body>\r\n        <ClinicalFormData\r\n          setActive={setActive}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowModal={setShowModal}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n        />\r\n      </Modal.Body>\r\n      <Modal>\r\n        <Button onClick={onHide}>Close</Button>\r\n      </Modal>\r\n    </Modal>\r\n  );\r\n}\r\n","export const setTrialTitle = (title) => ({\r\n  type: \"SET_TRIAL_TITLE\",\r\n  title,\r\n});\r\nexport const setTrialDescription = (description) => ({\r\n  type: \"SET_TRIAL_DESCRIPTION\",\r\n  description,\r\n});\r\nexport const setTrialParticipants = (participants) => ({\r\n  type: \"SET_TRIAL_PARTICIPANTS\",\r\n  participants,\r\n});\r\nexport const setTrialQualified = (qualified) => ({\r\n  type: \"SET_TRIAL_QUALIFIED\",\r\n  qualified,\r\n});\r\nexport const setTrialNotQualified = (notQualified) => ({\r\n  type: \"SET_TRIAL_NOT_QUALIFIED\",\r\n  notQualified,\r\n});\r\n\r\nexport const setTrialPrerequisite = (prerequisite) => ({\r\n  type: \"SET_TRIAL_PREREQUISITE\",\r\n  prerequisite,\r\n});\r\n\r\nexport const setTrialLocation = (address, coordinates) => ({\r\n  type: \"SET_TRIAL_LOCATION\",\r\n  address,\r\n  coordinates,\r\n});\r\nexport const setTrialPayout = (payout) => ({\r\n  type: \"SET_TRIAL_PAYOUT\",\r\n  payout,\r\n});\r\nexport const setTrialStatus = (status) => ({\r\n  type: \"SET_TRIAL_STATUS\",\r\n  status,\r\n});\r\nexport const setTrialType = (studyType) => ({\r\n  type: \"SET_TRIAL_TYPE\",\r\n  studyType,\r\n});\r\nexport const setTrialID = (trialID) => ({\r\n  type: \"SET_TRIAL_ID\",\r\n  trialID,\r\n});\r\n\r\nexport const setTrialDate = (start, end) => ({\r\n  type: \"SET_TRIAL_DATE\",\r\n  start,\r\n  end,\r\n});\r\n\r\nexport const setTrialPoster = (poster) => ({\r\n  type: \"SET_TRIAL_POSTER\",\r\n  poster,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SubmitTrial from \"./SubmitTrial\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SignInModal from \"../../components/modals/SignInModal\";\r\nimport ParticipantAuthModal from \"../../components/modals/ParticipantAuthModal\";\r\nimport ClinicalAuthModal from \"../../components/modals/ClinicalAuthModal\";\r\nimport { nanoid } from \"nanoid/async\";\r\nimport {\r\n  setTrialTitle,\r\n  setTrialParticipants,\r\n  setTrialDescription,\r\n  setTrialQualified,\r\n  setTrialNotQualified,\r\n  setTrialPrerequisite,\r\n  setTrialLocation,\r\n  setTrialPayout,\r\n  setTrialStatus,\r\n  setTrialID,\r\n  setTrialDate,\r\n  setTrialPoster,\r\n  setTrialType,\r\n} from \"../../redux/actions/trailSubmitAction\";\r\nimport {\r\n  setUserAptNo,\r\n  setUserCityState,\r\n  setUserZipcode,\r\n} from \"../../redux/actions/authAction\";\r\nimport {\r\n  priceValidation,\r\n  dateValidation,\r\n  addressValidations,\r\n  containCommasValidations,\r\n} from \"../../components/formValidation/FormValidation\";\r\n\r\n// import { addCheck } from \"./getArray\";\r\n\r\nexport default function SubmitTrialData() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [participants, setParticipants] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [qualified, setQualified] = useState(\"\");\r\n  const [notQualified, setNotQualified] = useState(\"\");\r\n  const [payout, setPayout] = useState(\"\");\r\n  const [prerequisite, setPrerequisite] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [citystate, setCityState] = useState(\"\");\r\n  const [aptno, setAptno] = useState(\"\");\r\n  const [zipcode, setZipcode] = useState(\"\");\r\n  const [studyType, setStudyType] = useState(\"\");\r\n\r\n  // Error\r\n  const [priceError, setPriceError] = useState(\"\");\r\n  const [startError, setStartError] = useState(\"\");\r\n  const [endError, setEndError] = useState(\"\");\r\n  const [locationError, setLocationError] = useState(\"\");\r\n  const [commaError, setCommaError] = useState(\"\");\r\n  const [commaTwoError, setCommaTwoError] = useState(\"\");\r\n\r\n  // date\r\n  const [start, setStart] = useState(\"\");\r\n  const [end, setEnd] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  // Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showClincicalModal, setShowClincicalModal] = useState(false);\r\n  const [showSignInModal, setShowSignInModal] = useState(false);\r\n  const [active, setActive] = useState(\"participate\");\r\n\r\n  // check is id is the same as poster id\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const { clinicalID, clinicalLoggedIn } = auth;\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    payout && priceValidation(payout, \"Price\", setPriceError);\r\n    start && dateValidation(start, \"Start date\", setStartError);\r\n    end && dateValidation(end, \"End date\", setEndError);\r\n    location && addressValidations(location, \"Address\", setLocationError);\r\n    qualified && containCommasValidations(qualified, setCommaError);\r\n    notQualified && containCommasValidations(notQualified, setCommaTwoError);\r\n  }, [payout, start, end, location, qualified, notQualified]);\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    const splitReqirements = qualified.split(\",\");\r\n    const splitNonReqirements = notQualified.split(\",\");\r\n    const splitPrerequisite = prerequisite.split(\",\");\r\n    const Id = await nanoid(5);\r\n    e.preventDefault();\r\n    dispatch(setTrialID(Id));\r\n    dispatch(setTrialTitle(title));\r\n    dispatch(setTrialParticipants(participants));\r\n    dispatch(setTrialPayout(payout));\r\n    dispatch(setTrialDescription(description));\r\n    dispatch(setTrialQualified(splitReqirements));\r\n    dispatch(setTrialNotQualified(splitNonReqirements));\r\n    dispatch(setTrialPrerequisite(splitPrerequisite));\r\n    dispatch(setTrialLocation(location));\r\n    dispatch(setTrialStatus(status));\r\n    dispatch(setTrialType(studyType));\r\n    dispatch(setTrialDate(start, end));\r\n    dispatch(setTrialPoster(clinicalID));\r\n    dispatch(setUserAptNo(aptno));\r\n    dispatch(setUserCityState(citystate));\r\n    dispatch(setUserZipcode(zipcode));\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <SubmitTrial\r\n      handleFormSubmit={handleFormSubmit}\r\n      title={title}\r\n      setTitle={setTitle}\r\n      participants={participants}\r\n      setParticipants={setParticipants}\r\n      payout={payout}\r\n      setPayout={setPayout}\r\n      description={description}\r\n      setDescription={setDescription}\r\n      setQualified={setQualified}\r\n      qualified={qualified}\r\n      notQualified={notQualified}\r\n      setNotQualified={setNotQualified}\r\n      prerequisite={prerequisite}\r\n      setPrerequisite={setPrerequisite}\r\n      location={location}\r\n      setLocation={setLocation}\r\n      status={status}\r\n      setStatus={setStatus}\r\n      studyType={studyType}\r\n      setStudyType={setStudyType}\r\n      start={start}\r\n      setStart={setStart}\r\n      end={end}\r\n      setEnd={setEnd}\r\n      SignInModal={SignInModal}\r\n      ParticipantAuthModal={ParticipantAuthModal}\r\n      ClinicalAuthModal={ClinicalAuthModal}\r\n      showModal={showModal}\r\n      setShowModal={setShowModal}\r\n      showClincicalModal={showClincicalModal}\r\n      setShowClincicalModal={setShowClincicalModal}\r\n      showSignInModal={showSignInModal}\r\n      setShowSignInModal={setShowSignInModal}\r\n      active={active}\r\n      setActive={setActive}\r\n      clinicalLoggedIn={clinicalLoggedIn}\r\n      priceError={priceError}\r\n      startError={startError}\r\n      endError={endError}\r\n      locationError={locationError}\r\n      commaError={commaError}\r\n      commaTwoError={commaTwoError}\r\n      aptno={aptno}\r\n      setAptno={setAptno}\r\n      citystate={citystate}\r\n      setCityState={setCityState}\r\n      zipcode={zipcode}\r\n      setZipcode={setZipcode}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, NavLink } from \"react-router-dom\";\r\nimport { Button, Form, Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\r\n\r\nexport default function AccountSettings({\r\n  handleSettingsSubmit,\r\n  deleteUserInfo,\r\n  firstName,\r\n  setFirstName,\r\n  lastName,\r\n  setLastName,\r\n  email,\r\n  setEmail,\r\n  address,\r\n  setAddress,\r\n  aptno,\r\n  setAptno,\r\n  citystate,\r\n  setCityState,\r\n  zipcode,\r\n  setZipcode,\r\n  password,\r\n  setPassword,\r\n  handleEmailSubmit,\r\n}) {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const { id } = useParams();\r\n  const [validated, SetValidated] = useState(false);\r\n\r\n  const comparePasswords = () => {\r\n    if (document.getElementById(\"curPassword\").value == password) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const submitPasswordUpdate = () => {\r\n    if (comparePasswords) {\r\n      setPassword(document.getElementById(\"newPassword\").value);\r\n    }\r\n  };\r\n\r\n  function deleteAlert() {\r\n    var conf = window.confirm(\"Are you sure you want to delete your profile?\");\r\n    if (conf == true) {\r\n      deleteUserInfo();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <Container>\r\n        <Row>\r\n          <Col xs={8}></Col>\r\n          <Col xs={4}></Col>\r\n          <Col></Col>\r\n          <Col></Col>\r\n          <Col xs={10}>\r\n            <h1 className='primary-color'>Account Settings</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Container className='container'>\r\n        <Tab.Container defaultActiveKey='first'>\r\n          <Row>\r\n            <Col xs={4}></Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Col xs={7}>\r\n              <Nav variant='pills' className='flex-column bgLight'>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    name='personalDetailsBtn'\r\n                    style={{ color: \"#5f6368\" }}\r\n                    eventKey='first'\r\n                  >\r\n                    <h4>Personal Details</h4>\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    style={{ color: \"#5f6368\" }}\r\n                    id='updateAccountBtn'\r\n                    eventKey='second'\r\n                  >\r\n                    <h4>Update Account</h4>\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Tab.Content>\r\n                {/* Personal Details */}\r\n                <Tab.Pane eventKey='first'>\r\n                  <Container>\r\n                    <Form>\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Group id='userFirstName'>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control\r\n                              type='text'\r\n                              placeholder={auth.firstName}\r\n                              value={firstName}\r\n                              onChange={(e) => setFirstName(e.target.value)}\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n\r\n                        <Form.Group as={Col} xs={3} id='userLastName'>\r\n                          <Form.Label>Last Name</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.lastName}\r\n                            value={lastName}\r\n                            onChange={(e) => {\r\n                              setLastName(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} xs={6}>\r\n                          <Form.Label>Email</Form.Label>\r\n                          <Form.Control\r\n                            type='email'\r\n                            placeholder={auth.email}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group as={Col} id='userAddress'>\r\n                          <Form.Label>Street Address</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.address}\r\n                            value={address}\r\n                            onChange={(e) => {\r\n                              setAddress(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} id='userAptno'>\r\n                          <Form.Label>Apt, Suite, Bldg</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.aptno}\r\n                            value={aptno}\r\n                            onChange={(e) => {\r\n                              setAptno(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group as={Col} id='userCityState'>\r\n                          <Form.Label>City, State</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.citystate}\r\n                            value={citystate}\r\n                            onChange={(e) => {\r\n                              setCityState(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} id='userZipcode'>\r\n                          <Form.Label>zipcode</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.zipcode}\r\n                            value={zipcode}\r\n                            onChange={(e) => {\r\n                              setZipcode(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <Button\r\n                            className='primary-color-btn margin-top-10 width-396'\r\n                            onClick={(e) => {\r\n                              handleSettingsSubmit(e);\r\n                            }}\r\n                          >\r\n                            Save Changes\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </Container>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey='second'>\r\n                  <Container>\r\n                    <Form>\r\n                      <Row>\r\n                        <Col>\r\n                          <h3>Update Your Email</h3>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Group id='updateEmail'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                              type='email'\r\n                              placeholder={auth.email}\r\n                              value={email}\r\n                              onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                              }}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      <hr style={{ width: \"405px\" }} />\r\n                      <Row>\r\n                        <h3>Update Your Password</h3>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group id='curPassword'>\r\n                          <Form.Label>Current Password</Form.Label>\r\n                          <Form.Control\r\n                            type='password'\r\n                            placeholder='Current Password'\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group id='newPassword'>\r\n                          <Form.Label>New Password</Form.Label>\r\n                          <Form.Control\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Row>\r\n\r\n                      <hr style={{ width: \"405px\" }} />\r\n                      <Row>\r\n                        <Col>\r\n                          <Button\r\n                            className='primary-color-btn width-396'\r\n                            id='DeleteButton'\r\n                            onClick={() => {\r\n                              deleteAlert();\r\n                            }}\r\n                          >\r\n                            Delete Account\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                      <hr style={{ width: \"405px\" }} />\r\n                      <Row>\r\n                        <Col>\r\n                          <Button\r\n                            className='primary-color-btn width-396'\r\n                            onClick={(e) => {\r\n                              submitPasswordUpdate(e);\r\n                              handleEmailSubmit(e);\r\n                            }}\r\n                          >\r\n                            Update Account\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </Container>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AccountSettings from \"./AccountSettings\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  setUserFirstName,\r\n  setUserLastName,\r\n  setUserEmail,\r\n  setUserAddress,\r\n  setUserAptNo,\r\n  setUserCityState,\r\n  setUserZipcode,\r\n  setUserPassword,\r\n  deleteUserInfo,\r\n} from \"../../redux/actions/authAction\";\r\n\r\nexport default function AccountSettingsData() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [citystate, setCityState] = useState(\"\");\r\n  const [aptno, setAptno] = useState(\"\");\r\n  const [zipcode, setZipcode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSettingsSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setUserFirstName(firstName));\r\n    dispatch(setUserLastName(lastName));\r\n    dispatch(setUserEmail(email));\r\n    dispatch(setUserAddress(address));\r\n    dispatch(setUserAptNo(aptno));\r\n    dispatch(setUserCityState(citystate));\r\n    dispatch(setUserZipcode(zipcode));\r\n\r\n    dispatch(setUserPassword(password));\r\n  };\r\n\r\n  const handleEmailSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setUserEmail(email));\r\n  };\r\n\r\n  const detailsBtn = () => {\r\n\r\n    document.getElementById('personalDetailsBtn').style.textDecoration=\"underline\";\r\n  };\r\n\r\n  return (\r\n    <AccountSettings\r\n      handleSettingsSubmit={handleSettingsSubmit}\r\n      handleEmailSubmit={handleEmailSubmit}\r\n      deleteUserInfo={deleteUserInfo}\r\n      firstName={firstName}\r\n      setFirstName={setFirstName}\r\n      lastName={lastName}\r\n      setLastName={setLastName}\r\n      email={email}\r\n      setEmail={setEmail}\r\n      address={address}\r\n      setAddress={setAddress}\r\n      aptno={aptno}\r\n      setAptno={setAptno}\r\n      citystate={citystate}\r\n      setCityState={setCityState}\r\n      zipcode={zipcode}\r\n      setZipcode={setZipcode}\r\n      password={password}\r\n      setPassword={setPassword}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Form, Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\r\n\r\nexport default function ClinicalAccountSettings({\r\n  handleSettingsSubmit,\r\n  deleteUserInfo,\r\n  email,\r\n  setEmail,\r\n  address,\r\n  setAddress,\r\n  aptno,\r\n  setAptno,\r\n  citystate,\r\n  setCityState,\r\n  zipcode,\r\n  setZipcode,\r\n  password,\r\n  setPassword,\r\n  handleEmailSubmit,\r\n}) {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const { id } = useParams();\r\n  const [validated, SetValidated] = useState(false);\r\n\r\n  const comparePasswords = () => {\r\n    if (document.getElementById(\"curPassword\").value == password) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const submitPasswordUpdate = () => {\r\n    if (comparePasswords) {\r\n      setPassword(document.getElementById(\"newPassword\").value);\r\n    }\r\n  };\r\n\r\n  function deleteAlert() {\r\n    var conf = window.confirm(\"Are you sure you want to delete your profile?\");\r\n    if (conf == true) {\r\n      deleteUserInfo();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <Container>\r\n        <Row>\r\n          <Col xs={8}></Col>\r\n          <Col xs={4}></Col>\r\n          <Col></Col>\r\n          <Col></Col>\r\n          <Col xs={10}>\r\n            <h1 className='primary-color'>Account Settings</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Container className='container'>\r\n        <Tab.Container defaultActiveKey='first'>\r\n          <Row>\r\n            <Col xs={4}></Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Col xs={7}>\r\n              <Nav variant='pills' className='flex-column bgLight'>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    name='personalDetailsBtn'\r\n                    style={{ color: \"#5f6368\" }}\r\n                    eventKey='first'\r\n                  >\r\n                    <h4>Company Details</h4>\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    style={{ color: \"#5f6368\" }}\r\n                    id='updateAccountBtn'\r\n                    eventKey='second'\r\n                  >\r\n                    <h4>Update Account</h4>\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Tab.Content>\r\n                {/* Personal Details */}\r\n                <Tab.Pane eventKey='first'>\r\n                  <Container>\r\n                    <Form>\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Group id='userCompanyName'>\r\n                            <Form.Label>Company Name</Form.Label>\r\n                            <Form.Control\r\n                              type='text'\r\n                              placeholder={auth.companyName}\r\n                              required\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n\r\n                        <Form.Group as={Col} xs={6}>\r\n                          <Form.Label>Email</Form.Label>\r\n                          <Form.Control\r\n                            type='email'\r\n                            placeholder={auth.clinicalEmail}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group as={Col} id='userAddress'>\r\n                          <Form.Label>Street Address</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.address}\r\n                            value={address}\r\n                            onChange={(e) => {\r\n                              setAddress(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} id='userAptno'>\r\n                          <Form.Label>Apt, Suite, Bldg</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.aptno}\r\n                            value={aptno}\r\n                            onChange={(e) => {\r\n                              setAptno(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group as={Col} id='userCityState'>\r\n                          <Form.Label>City, State</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.citystate}\r\n                            value={citystate}\r\n                            onChange={(e) => {\r\n                              setCityState(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} id='userZipcode'>\r\n                          <Form.Label>zipcode</Form.Label>\r\n                          <Form.Control\r\n                            type='text'\r\n                            placeholder={auth.zipcode}\r\n                            value={zipcode}\r\n                            onChange={(e) => {\r\n                              setZipcode(e.target.value);\r\n                            }}\r\n                            required\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <Button\r\n                            className='primary-color-btn margin-top-10 width-396'\r\n                            onClick={(e) => {\r\n                              handleSettingsSubmit(e);\r\n                            }}\r\n                          >\r\n                            Save Changes\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </Container>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey='second'>\r\n                  <Container>\r\n                    <Form>\r\n                      <Row>\r\n                        <Col>\r\n                          <h3>Update Your Email</h3>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Group id='updateEmail'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                              type='email'\r\n                              placeholder={auth.email}\r\n                              value={email}\r\n                              onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                              }}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      <hr style={{ width: \"405px\" }} />\r\n                      <Row>\r\n                        <h3>Update Your Password</h3>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group id='curPassword'>\r\n                          <Form.Label>Current Password</Form.Label>\r\n                          <Form.Control\r\n                            type='password'\r\n                            placeholder='Current Password'\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row>\r\n                        <Form.Group id='newPassword'>\r\n                          <Form.Label>New Password</Form.Label>\r\n                          <Form.Control\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Row>\r\n\r\n                      <hr style={{ width: \"405px\" }} />\r\n                      <Row>\r\n                        <Col>\r\n                          <Button\r\n                            className='primary-color-btn margin-top-10 width-396'\r\n                            id='DeleteButton'\r\n                            onClick={() => {\r\n                              deleteAlert();\r\n                            }}\r\n                          >\r\n                            Delete Account\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                      <hr style={{ width: \"405px\" }} />\r\n                      <Row>\r\n                        <Col>\r\n                          <Button\r\n                            className='primary-color-btn  width-396'\r\n                            onClick={(e) => {\r\n                              submitPasswordUpdate(e);\r\n                              handleEmailSubmit(e);\r\n                            }}\r\n                          >\r\n                            Update Account\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </Container>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ClinicalAccountSettings from \"./ClinicalAccountSettings\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  setUserEmail,\r\n  setUserAddress,\r\n  setUserAptNo,\r\n  setUserCityState,\r\n  setUserZipcode,\r\n  setUserPassword,\r\n  deleteUserInfo,\r\n} from \"../../redux/actions/authAction\";\r\n\r\nexport default function ClinicalAccountSettingsData() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [citystate, setCityState] = useState(\"\");\r\n  const [aptno, setAptno] = useState(\"\");\r\n  const [zipcode, setZipcode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSettingsSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setUserEmail(email));\r\n    dispatch(setUserAddress(address));\r\n    dispatch(setUserAptNo(aptno));\r\n    dispatch(setUserCityState(citystate));\r\n    dispatch(setUserZipcode(zipcode));\r\n\r\n    dispatch(setUserPassword(password));\r\n  };\r\n\r\n  const handleEmailSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setUserEmail(email));\r\n  };\r\n\r\n  return (\r\n    <ClinicalAccountSettings\r\n      handleSettingsSubmit={handleSettingsSubmit}\r\n      handleEmailSubmit={handleEmailSubmit}\r\n      deleteUserInfo={deleteUserInfo}\r\n      email={email}\r\n      setEmail={setEmail}\r\n      address={address}\r\n      setAddress={setAddress}\r\n      aptno={aptno}\r\n      setAptno={setAptno}\r\n      citystate={citystate}\r\n      setCityState={setCityState}\r\n      zipcode={zipcode}\r\n      setZipcode={setZipcode}\r\n      password={password}\r\n      setPassword={setPassword}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Col, Row, Button, Image } from \"react-bootstrap\";\r\nimport Explore from \"../../../image/explore.png\";\r\nimport LatestCard from \"../../Card/LatestCard\";\r\nimport ConflictCard from \"../../Card/ConflictCard\";\r\nimport FutureCard from \"../../Card/FutureCards\";\r\nimport SubmitCard from \"../../Card/SubmitCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CreateAccountModal from \"../../../components/modals/CreateAccountModal\";\r\nimport \"../../../participate.css\";\r\n\r\nexport default function Home() {\r\n  // submit\r\n  const [alertModal, setAlertModal] = useState(false);\r\n  const [alertApplyModal, setAlertApplyModal] = useState(false);\r\n  const [active, setActive] = useState(\"participants\");\r\n  const { auth, submit } = useSelector((state) => ({ ...state }));\r\n  const { title, payout, qualified, notQualified, prerequisite } = submit;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <section>\r\n          <Container fluid className='position-relative-bottom'>\r\n            <h2 className='margin-left-50 white-color primary-font font-weight-bold text-shadow'>\r\n              Latest Trials\r\n            </h2>\r\n\r\n            <div className='d-flex flex-wrap'>\r\n              {!title ||\r\n              !qualified ||\r\n              !prerequisite ||\r\n              !notQualified ||\r\n              !payout ? null : (\r\n                <SubmitCard />\r\n              )}\r\n              <LatestCard slice='8' />\r\n            </div>\r\n          </Container>\r\n        </section>\r\n        <section className='margin-top-10'>\r\n          <Container fluid>\r\n            <h2 className='margin-left-50 header-color primary-font font-weight-bold'>\r\n              Participate without conflictions\r\n            </h2>\r\n            <div className='d-flex flex-wrap'>\r\n              <ConflictCard slice='8' />\r\n            </div>\r\n          </Container>\r\n        </section>\r\n        <section className='margin-top-10'>\r\n          <Container fluid>\r\n            <h2 className='margin-left-50 header-color primary-font font-weight-bold'>\r\n              Discover future trials\r\n            </h2>\r\n            <div className='d-flex flex-wrap'>\r\n              <FutureCard slice='8' />\r\n            </div>\r\n          </Container>\r\n        </section>\r\n      </main>\r\n\r\n      {active === \"participants\" && (\r\n        <CreateAccountModal\r\n          fname={auth.firstName}\r\n          show={alertModal}\r\n          onHide={() => {\r\n            setAlertModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n\r\n      {active === \"clinical\" && (\r\n        <CreateAccountModal\r\n          cname={auth.companyName}\r\n          show={alertApplyModal}\r\n          onHide={() => {\r\n            setAlertApplyModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CardSubmit from \"../../Card/SubmitCard\";\r\nimport { Card, Container, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function TrialSubmitted() {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const { submit } = useSelector((state) => ({ ...state }));\r\n  const { clinicalID, companyName } = auth;\r\n  const navigate = useNavigate();\r\n  const {\r\n    title,\r\n    trialID,\r\n    participants,\r\n    payout,\r\n    qualified,\r\n    notQualified,\r\n    poster,\r\n  } = submit;\r\n  console.log(poster);\r\n  return (\r\n    <div>\r\n      {poster === clinicalID ? (\r\n        <CardSubmit\r\n          key={trialID}\r\n          id={trialID}\r\n          submitPrice={payout}\r\n          title={title}\r\n          eligibility={participants}\r\n          btnName={\"Learn More\"}\r\n        ></CardSubmit>\r\n      ) : (\r\n        <Container className='card-container '>\r\n          <Card style={{ width: \"18rem\" }} className='height120'>\r\n            <Card.Body className='top-80'>\r\n              <Card.Title className='text-center primary-color'>\r\n                No Trials\r\n              </Card.Title>\r\n              <Card.Text className='text-center'>\r\n                Please create your first trial.\r\n              </Card.Text>\r\n              <Button\r\n                onClick={() => navigate(\"/submit-trials\")}\r\n                className='primary-color-btn width-265 d-flex margin-auto justify-content-center'\r\n              >\r\n                Create Trial\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function AppliedTrialForm({\r\n  first,\r\n  last,\r\n  emailApply,\r\n  setFirst,\r\n  setLast,\r\n  setEmailApply,\r\n  handleApply,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n}) {\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Row className='form-row'>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder={`${firstName}`}\r\n              className='form-control-width'\r\n              value={first}\r\n              onChange={(e) => setFirst(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder={`${lastName}`}\r\n              className='form-control-width'\r\n              value={last}\r\n              onChange={(e) => setLast(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder={`${email}`}\r\n            value={emailApply}\r\n            onChange={(e) => setEmailApply(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Form.Label>\r\n            By applying, I have read this trials {\"\"}\r\n            <Link to='#' className='primary-color '>\r\n              Legal Informations\r\n            </Link>\r\n            {\"\"} and{\" \"}\r\n            <Link to='#' className='primary-color '>\r\n              Legal Disclosures\r\n            </Link>\r\n          </Form.Label>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3 form-group-control'>\r\n          <Button\r\n            variant='outline-primary'\r\n            className='primary-color-btn'\r\n            onClick={(e) => {\r\n              handleApply(e);\r\n            }}\r\n          >\r\n            APPLY\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","export const setAppliedName = (first, last) => ({\r\n  type: \"SET_APPLIED_NAME\",\r\n  first,\r\n  last,\r\n});\r\n\r\nexport const setAppliedEmail = (email) => ({\r\n  type: \"SET_APPLIED_EMAIL\",\r\n  email,\r\n});\r\n\r\nexport const setAppliedID = (appliedID) => ({\r\n  type: \"SET_APPLIED_ID\",\r\n  appliedID,\r\n});\r\nexport const setAppliedURL = (url) => ({\r\n  type: \"SET_APPLIED_URL\",\r\n  url,\r\n});\r\nexport const setAppliedTitle = (trialTitle) => ({\r\n  type: \"SET_APPLIED_TITLE\",\r\n  trialTitle,\r\n});\r\nexport const setAppliedParticipants = (participants) => ({\r\n  type: \"SET_APPLIED_PARTICIPANTS\",\r\n  participants,\r\n});\r\nexport const setAppliedDescription = (description) => ({\r\n  type: \"SET_APPLIED_DESCRIPTION\",\r\n  description,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AppliedTrialForm from \"./AppliedTrialForm\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setAppliedName,\r\n  setAppliedEmail,\r\n  setAppliedID,\r\n  setAppliedURL,\r\n} from \"../../redux/actions/appliedAction\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function AppledTrialFormData() {\r\n  const dispatch = useDispatch();\r\n  const [first, setFirst] = useState(\"\");\r\n  const [last, setLast] = useState(\"\");\r\n  const [emailApply, setEmailApply] = useState(\"\");\r\n\r\n  // redux\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const { firstName, lastName, email, userId } = auth;\r\n  const { id } = useParams();\r\n\r\n  const handleApply = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAppliedEmail(emailApply));\r\n    dispatch(setAppliedName(first, last));\r\n    dispatch(setAppliedID(id));\r\n    dispatch(setAppliedURL(window.location.href));\r\n    window.location.replace(`/csc642participaid/#/trials/${userId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppliedTrialForm\r\n        first={first}\r\n        last={last}\r\n        emailApply={emailApply}\r\n        setFirst={setFirst}\r\n        setLast={setLast}\r\n        setEmailApply={setEmailApply}\r\n        handleApply={handleApply}\r\n        firstName={firstName}\r\n        lastName={lastName}\r\n        email={email}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport AppliedTrialFormData from \"../form/AppledTrialFormData\";\r\n\r\nexport default function ApplyTrialModal(props) {\r\n  const {\r\n    onHide,\r\n    setActive,\r\n    setShowModal,\r\n    setShowSignInModal,\r\n    setShowClincicalModal,\r\n  } = props;\r\n  return (\r\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter' centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title className='primary-color title-modal-applied'>\r\n          Apply For Trial\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <p className='modal-applied-p'>\r\n        When your application gets approved, the medical company for this trial\r\n        will contact you via email to schedule an appointment for all necessary\r\n        tests.\r\n      </p>\r\n      <Modal.Body>\r\n        <AppliedTrialFormData\r\n          setActive={setActive}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowModal={setShowModal}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n        />\r\n      </Modal.Body>\r\n      <Modal>\r\n        <Button onClick={onHide}>Close</Button>\r\n      </Modal>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config({ path: \"../../config.env\" });\r\nconst mapStyles = {\r\n  //   marginRight: \"auto\",\r\n  marginTop: \"-12px\",\r\n  width: \"99.5%\",\r\n  height: \"88.5%\",\r\n  position: \"relative\",\r\n  border: \"1px solid var(--light-gray-color)\",\r\n  borderRadius: \"5px\",\r\n};\r\nfunction GoogleMapContainer(props) {\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [activeMarker, setActiveMarker] = useState({});\r\n  const [selectedPlace, setSelectedPlace] = useState({});\r\n  const [latLon, setLatLon] = useState({ lat: 1, lng: 1 });\r\n\r\n  useEffect(() => {\r\n    getCoordinates();\r\n  }, []);\r\n\r\n  const getCoordinates = async () => {\r\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${props.mapAddress}&key=AIzaSyAuu3XkFNEVFKWbMgxfl62l1Gt-k3HG_V4`;\r\n    await axios\r\n      .get(url)\r\n      .then((response) => {\r\n        console.log(response);\r\n        setLatLon(response.data.results[0].geometry.location);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onMarkerClick = (props, marker) => {\r\n    setSelectedPlace(props);\r\n    setActiveMarker(marker);\r\n    setShowInfoWindow(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    if (showInfoWindow) {\r\n      setShowInfoWindow(false);\r\n      setActiveMarker(null);\r\n    }\r\n  };\r\n\r\n  const { google } = props;\r\n\r\n  return (\r\n    <Map\r\n      className={`${props.isActive}`}\r\n      google={google}\r\n      zoom={12}\r\n      style={mapStyles}\r\n      initialCenter={latLon}\r\n      center={latLon}\r\n    >\r\n      <Marker\r\n        onClick={onMarkerClick}\r\n        name={props.mapAddress}\r\n        position={latLon}\r\n      />\r\n      <InfoWindow\r\n        marker={activeMarker}\r\n        visible={showInfoWindow}\r\n        onClose={onClose}\r\n      >\r\n        <div>\r\n          <h4 className='map-name'>{selectedPlace.name}</h4>\r\n        </div>\r\n      </InfoWindow>\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n})(GoogleMapContainer);\r\n","import React, { useState } from \"react\";\r\nimport CreateAccountModal from \"../../components/modals/CreateAccountModal\";\r\nimport SignInModal from \"../../components/modals/SignInModal\";\r\nimport ParticipantAuthModal from \"../../components/modals/ParticipantAuthModal\";\r\nimport ClinicalAuthModal from \"../../components/modals/ClinicalAuthModal\";\r\nimport AppliedTrialModal from \"../../components/modals/ApplyTrialModal\";\r\nimport trials from \"../../stimulate-backend/data/latest-trials.json\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport {\r\n  setAppliedTitle,\r\n  setAppliedParticipants,\r\n  setAppliedDescription,\r\n} from \"../../redux/actions/appliedAction\";\r\n\r\nimport { useParams, Outlet, useNavigate } from \"react-router-dom\";\r\nimport GoogleMapContainer from \"../../components/map/GoogleMapContainer\";\r\n\r\nexport default function AboutLatestTrials() {\r\n  const { id } = useParams();\r\n  const latest = trials[\"Latest Trials\"].find(\r\n    (trials) => trials.id === Number(id)\r\n  );\r\n  console.log(latest);\r\n\r\n  const dispatch = useDispatch();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showClincicalModal, setShowClincicalModal] = useState(false);\r\n  const [showSignInModal, setShowSignInModal] = useState(false);\r\n  const [alertApplyModal, setAlertApplyModal] = useState(false);\r\n  const [appliedModal, setAppliedModal] = useState(false);\r\n  const [active, setActive] = useState(\"apply\");\r\n  const { auth, submit, applied } = useSelector((state) => ({ ...state }));\r\n  const { isLoggedIn, clinicalLoggedIn } = auth;\r\n  const { trialTitle } = applied;\r\n  console.log(trialTitle);\r\n  console.log(latest.title);\r\n  return (\r\n    <>\r\n      <Container>\r\n        {latest ? (\r\n          <div>\r\n            <h2 className='primary-color margin-top-10 font-size-lg font-weight-bold'>\r\n              {latest.title}\r\n            </h2>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <p className='font-size-sm width-620'>{latest.description}</p>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n              Legals\r\n            </h2>\r\n            <div className=' margin-top-sm'>\r\n              <a href=' # '> Legals Information</a>\r\n              <p></p>\r\n              <a href=' # '> Legals Disclosures</a>\r\n            </div>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n              Eligibility\r\n            </h2>\r\n            <Row className='width-619  margin-top-sm'>\r\n              <Col xs={6}>\r\n                {latest.eligibility.map(\r\n                  (el) =>\r\n                    el.eligible &&\r\n                    el.eligible.map((id) => (\r\n                      <div className='font-size-xsm margin-left-negative'>\r\n                        {id.requirement_one ? (\r\n                          <p>\r\n                            <FaCheck className='green-color ' />{\" \"}\r\n                            {id.requirement_one}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_two ? (\r\n                          <p>\r\n                            <FaCheck className='green-color ' />{\" \"}\r\n                            {id.requirement_two}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_three ? (\r\n                          <p>\r\n                            <FaCheck className='green-color ' />{\" \"}\r\n                            {id.requirement_three}\r\n                          </p>\r\n                        ) : null}\r\n                      </div>\r\n                    ))\r\n                )}\r\n              </Col>\r\n              <Col xs={6}>\r\n                {latest.eligibility.map(\r\n                  (el) =>\r\n                    el.ineligible &&\r\n                    el.ineligible.map((id) => (\r\n                      <div className='font-size-xsm '>\r\n                        {id.requirement_one ? (\r\n                          <p>\r\n                            <FaTimes className='red-color ' />{\" \"}\r\n                            {id.requirement_one}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_two ? (\r\n                          <p>\r\n                            <FaTimes className='red-color ' />{\" \"}\r\n                            {id.requirement_two}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_three ? (\r\n                          <p>\r\n                            <FaTimes className='red-color ' />{\" \"}\r\n                            {id.requirement_three}\r\n                          </p>\r\n                        ) : null}\r\n                      </div>\r\n                    ))\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n              Prerequisite\r\n            </h2>\r\n            {latest.prerequisite.map((result) => (\r\n              <div className='font-size-xsm  margin-top-sm'>\r\n                <p>\r\n                  <FaCheck className='green-color ' /> {result.requirement_one}\r\n                </p>\r\n                {result.requirement_two ? (\r\n                  <p>\r\n                    {\" \"}\r\n                    <FaCheck className='green-color ' />{\" \"}\r\n                    {result.requirement_two}\r\n                  </p>\r\n                ) : null}\r\n                {result.requirement_three ? (\r\n                  <p>\r\n                    {\" \"}\r\n                    <FaCheck className='green-color ' />{\" \"}\r\n                    {result.requirement_three}\r\n                  </p>\r\n                ) : null}\r\n                {result.requirement_four ? (\r\n                  <p>\r\n                    {\" \"}\r\n                    <FaCheck className='green-color ' />{\" \"}\r\n                    {result.requirement_four}\r\n                  </p>\r\n                ) : null}\r\n              </div>\r\n            ))}\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm  font-weight-bold'>\r\n              Details\r\n            </h2>\r\n            <Row className='margin-left-negative  width-794'>\r\n              <Col xs={6}>\r\n                <p className='font-size-xsm '>\r\n                  Participants:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {latest.participants}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  ID:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {latest.detail[0]._id}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Payout:{\" \"}\r\n                  <span className='primary-color font-size-md font-weight-bold'>\r\n                    {latest.price}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Study Type:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {latest.detail[0][\"study-type\"]}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  Status: {\"\"}\r\n                  {latest.detail[0].status === \"Recruiting\" ? (\r\n                    <span className='green-color font-weight-bold'>\r\n                      {latest.detail[0].status}\r\n                    </span>\r\n                  ) : latest.detail[0].status === \"Not Recruiting\" ? (\r\n                    <span className='red-color font-weight-bold'>\r\n                      {latest.detail[0].status}\r\n                    </span>\r\n                  ) : null}\r\n                </p>\r\n\r\n                <p className='font-size-xsm '>\r\n                  Start Date:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {latest.detail[0][\"start-date\"]}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  End Date:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {latest.detail[0][\"end-date\"]}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Last Update:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {latest.detail[0][\"last-updated\"]}\r\n                  </span>\r\n                </p>\r\n              </Col>\r\n\r\n              <Col xs={6}>\r\n                {latest.location.map((loc) => (\r\n                  <GoogleMapContainer\r\n                    isActive={\"result-map-container\"}\r\n                    mapAddress={`${loc.address} `}\r\n                  />\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          <h1> Sorry, but this trials doesn't exist yet!</h1>\r\n        )}\r\n        {clinicalLoggedIn ? null : !isLoggedIn ? (\r\n          <button\r\n            onClick={() => {\r\n              setActive(\"participant\");\r\n              setShowModal(true);\r\n            }}\r\n            className='primary-color-btn height34'\r\n          >\r\n            Apply Now!\r\n          </button>\r\n        ) : submit.status !== \"Not Recruiting\" ? (\r\n          <button\r\n            disabled={trialTitle.match(latest.title) ? \"true\" : null}\r\n            onClick={() => {\r\n              setActive(\"applied\");\r\n              setAppliedModal(true);\r\n              dispatch(setAppliedTitle(latest.title));\r\n              dispatch(setAppliedParticipants(latest.participants));\r\n              dispatch(setAppliedDescription(latest.description));\r\n            }}\r\n            className='primary-color-btn height34'\r\n          >\r\n            {trialTitle.match(latest.title) ? \"Applied\" : \"Apply Now\"}\r\n          </button>\r\n        ) : null}\r\n      </Container>\r\n      {active === \"applied\" && (\r\n        <AppliedTrialModal\r\n          show={appliedModal}\r\n          onHide={() => {\r\n            setAppliedModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}{\" \"}\r\n      {active === \"apply\" && (\r\n        <CreateAccountModal\r\n          cname={auth.companyName}\r\n          show={alertApplyModal}\r\n          onHide={() => {\r\n            setAlertApplyModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"signin\" && (\r\n        <SignInModal\r\n          show={showSignInModal}\r\n          onHide={() => setShowSignInModal(false)}\r\n          setShowModal={setShowModal}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"clinical\" && (\r\n        <ClinicalAuthModal\r\n          show={showClincicalModal}\r\n          onHide={() => setShowClincicalModal(false)}\r\n          setShowModal={setShowModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"participant\" && (\r\n        <ParticipantAuthModal\r\n          show={showModal}\r\n          onHide={() => setShowModal(false)}\r\n          setActive={setActive}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowModal={setShowModal}\r\n        />\r\n      )}\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport CreateAccountModal from \"../../components/modals/CreateAccountModal\";\r\nimport SignInModal from \"../../components/modals/SignInModal\";\r\nimport ParticipantAuthModal from \"../../components/modals/ParticipantAuthModal\";\r\nimport ClinicalAuthModal from \"../../components/modals/ClinicalAuthModal\";\r\nimport AppliedTrialModal from \"../../components/modals/ApplyTrialModal\";\r\nimport trials from \"../../stimulate-backend/data/latest-trials.json\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport {\r\n  setAppliedTitle,\r\n  setAppliedParticipants,\r\n  setAppliedDescription,\r\n} from \"../../redux/actions/appliedAction\";\r\n\r\nimport GoogleMapContainer from \"../../components/map/GoogleMapContainer\";\r\n\r\nexport default function AboutLatestSubmitTrials() {\r\n  const timeElapsed = Date.now();\r\n  const today = new Date(timeElapsed);\r\n  const dispatch = useDispatch();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showClincicalModal, setShowClincicalModal] = useState(false);\r\n  const [showSignInModal, setShowSignInModal] = useState(false);\r\n  const [alertApplyModal, setAlertApplyModal] = useState(false);\r\n  const [appliedModal, setAppliedModal] = useState(false);\r\n  const [active, setActive] = useState(\"apply\");\r\n  const { auth, submit, applied } = useSelector((state) => ({ ...state }));\r\n  const {\r\n    title,\r\n    participants,\r\n    payout,\r\n    description,\r\n    qualified,\r\n    notQualified,\r\n    status,\r\n    studyType,\r\n    date,\r\n    trialID,\r\n    location,\r\n  } = submit;\r\n  const { isLoggedIn, clinicalLoggedIn } = auth;\r\n  const { appliedID, trialTitle } = applied;\r\n  return (\r\n    <>\r\n      <Container>\r\n        {submit ? (\r\n          <div>\r\n            <h2 className='primary-color margin-top-sm  font-weight-bold'>\r\n              {title}\r\n            </h2>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <p className='font-size-sm width-620'>{description}</p>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n              Legals\r\n            </h2>\r\n            <div>\r\n              <a href=' # '> Legals Information</a>\r\n              <p></p>\r\n              <a href=' # '> Legals Disclosures</a>\r\n            </div>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n              Eligibility\r\n            </h2>\r\n            <Row className='width-619'>\r\n              <Col xs={6}>\r\n                {qualified[0].map((result) => (\r\n                  <p>\r\n                    <FaCheck className='green-color ' /> {result}\r\n                  </p>\r\n                ))}\r\n              </Col>\r\n\r\n              <Col xs={6}>\r\n                {notQualified[0].map((result) => (\r\n                  <p>\r\n                    <FaTimes className='red-color ' /> {result}\r\n                  </p>\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm  font-weight-bold'>\r\n              Details\r\n            </h2>\r\n            <Row className='margin-left-negative  width-794'>\r\n              <Col xs={6}>\r\n                <p className='font-size-xsm '>\r\n                  Participants:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {participants}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  ID:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {trialID}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Payout:{\" \"}\r\n                  <span className='primary-color font-size-md font-weight-bold'>\r\n                    ${payout}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Study Type:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {studyType}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  Status: {\"\"}\r\n                  {status === \"Recruiting\" ? (\r\n                    <span className='green-color font-weight-bold'>\r\n                      {status}\r\n                    </span>\r\n                  ) : status === \"Not Recruiting\" ? (\r\n                    <span className='red-color font-weight-bold'>{status}</span>\r\n                  ) : null}\r\n                </p>\r\n\r\n                <p className='font-size-xsm '>\r\n                  Start Date:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {date[0].start}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  End Date:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {date[0].end}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Last Update:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {today.toDateString()}\r\n                  </span>\r\n                </p>\r\n              </Col>\r\n\r\n              <Col xs={6}>\r\n                <GoogleMapContainer\r\n                  isActive={\"result-map-container\"}\r\n                  mapAddress={`${location.address} `}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          <h1> Sorry, but this trials doesn't exist yet!</h1>\r\n        )}\r\n        {clinicalLoggedIn ? null : !isLoggedIn ? (\r\n          <button\r\n            onClick={() => {\r\n              setActive(\"participant\");\r\n              setShowModal(true);\r\n            }}\r\n            className='primary-color-btn height34'\r\n          >\r\n            Apply Now\r\n          </button>\r\n        ) : submit.status !== \"Not Recruiting\" ? (\r\n          <button\r\n            disabled={trialTitle.match(submit.title) ? \"true\" : null}\r\n            onClick={() => {\r\n              setActive(\"applied\");\r\n              setAppliedModal(true);\r\n              dispatch(setAppliedTitle(submit.title));\r\n              dispatch(setAppliedParticipants(submit.participants));\r\n              dispatch(setAppliedDescription(submit.description));\r\n            }}\r\n            className='primary-color-btn height34'\r\n          >\r\n            {trialTitle.match(submit.title) ? \"Applied\" : \"Apply Now\"}\r\n          </button>\r\n        ) : null}\r\n      </Container>\r\n      {active === \"applied\" && (\r\n        <AppliedTrialModal\r\n          show={appliedModal}\r\n          onHide={() => {\r\n            setAppliedModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}{\" \"}\r\n      {active === \"apply\" && (\r\n        <CreateAccountModal\r\n          cname={auth.companyName}\r\n          show={alertApplyModal}\r\n          onHide={() => {\r\n            setAlertApplyModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"signin\" && (\r\n        <SignInModal\r\n          show={showSignInModal}\r\n          onHide={() => setShowSignInModal(false)}\r\n          setShowModal={setShowModal}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"clinical\" && (\r\n        <ClinicalAuthModal\r\n          show={showClincicalModal}\r\n          onHide={() => setShowClincicalModal(false)}\r\n          setShowModal={setShowModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"participant\" && (\r\n        <ParticipantAuthModal\r\n          show={showModal}\r\n          onHide={() => setShowModal(false)}\r\n          setActive={setActive}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowModal={setShowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CreateAccountModal from \"../../components/modals/CreateAccountModal\";\r\nimport SignInModal from \"../../components/modals/SignInModal\";\r\nimport ParticipantAuthModal from \"../../components/modals/ParticipantAuthModal\";\r\nimport ClinicalAuthModal from \"../../components/modals/ClinicalAuthModal\";\r\nimport AppliedTrialModal from \"../../components/modals/ApplyTrialModal\";\r\nimport trials from \"../../stimulate-backend/data/conflict-free.json\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setAppliedTitle,\r\n  setAppliedParticipants,\r\n  setAppliedDescription,\r\n} from \"../../redux/actions/appliedAction\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport GoogleMapContainer from \"../../components/map/GoogleMapContainer\";\r\nexport default function AboutConflictTrials() {\r\n  const { id } = useParams();\r\n  const conflict = trials[\"Conflict-Free\"].find(\r\n    (trials) => trials.id === Number(id)\r\n  );\r\n  console.log(conflict);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showClincicalModal, setShowClincicalModal] = useState(false);\r\n  const [showSignInModal, setShowSignInModal] = useState(false);\r\n  const [alertApplyModal, setAlertApplyModal] = useState(false);\r\n  const [appliedModal, setAppliedModal] = useState(false);\r\n  const [active, setActive] = useState(\"apply\");\r\n  const { _id, payout, status } = conflict.detail[0];\r\n  const { auth, submit } = useSelector((state) => ({ ...state }));\r\n  const { isLoggedIn } = auth;\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <Container>\r\n        {conflict ? (\r\n          <div>\r\n            <h2 className='primary-color margin-top-10 font-size-lg font-weight-bold'>\r\n              {conflict.title}\r\n            </h2>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <p className='font-size-sm width-620'>{conflict.description}</p>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n              Legals\r\n            </h2>\r\n            <div>\r\n              <a href=' # '> Legals Information</a>\r\n              <p></p>\r\n              <a href=' # '> Legals Disclosures</a>\r\n            </div>\r\n            <p></p>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n              Eligibility\r\n            </h2>\r\n            <Row className='width-619  margin-top-sm'>\r\n              <Col xs={6}>\r\n                {conflict.eligibility.map(\r\n                  (el) =>\r\n                    el.eligible &&\r\n                    el.eligible.map((id) => (\r\n                      <div className='font-size-xsm margin-left-negative margin-top-sm'>\r\n                        {id.requirement_one ? (\r\n                          <p>\r\n                            <FaCheck className='green-color ' />{\" \"}\r\n                            {id.requirement_one}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_two ? (\r\n                          <p>\r\n                            {\" \"}\r\n                            <FaCheck className='green-color ' />{\" \"}\r\n                            {id.requirement_two}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_three ? (\r\n                          <p>\r\n                            {\" \"}\r\n                            <FaCheck className='green-color ' />{\" \"}\r\n                            {id.requirement_three}\r\n                          </p>\r\n                        ) : null}{\" \"}\r\n                        {id.requirement_four ? (\r\n                          <p>\r\n                            {\" \"}\r\n                            <FaCheck className='green-color ' />{\" \"}\r\n                            {id.requirement_four}\r\n                          </p>\r\n                        ) : null}\r\n                      </div>\r\n                    ))\r\n                )}\r\n              </Col>\r\n              <Col xs={6}>\r\n                {conflict.eligibility.map(\r\n                  (el) =>\r\n                    el.ineligible &&\r\n                    el.ineligible.map((id) => (\r\n                      <div className='font-size-xsm '>\r\n                        {id.requirement_one ? (\r\n                          <p>\r\n                            <FaTimes className='red-color ' />{\" \"}\r\n                            {id.requirement_one}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_two ? (\r\n                          <p>\r\n                            <FaTimes className='red-color ' />{\" \"}\r\n                            {id.requirement_two}\r\n                          </p>\r\n                        ) : null}\r\n                        {id.requirement_three ? (\r\n                          <p>\r\n                            <FaTimes className='red-color ' />{\" \"}\r\n                            {id.requirement_three}\r\n                          </p>\r\n                        ) : null}\r\n                      </div>\r\n                    ))\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <hr style={{ width: \"405px\" }} />\r\n            <h2 className='primary-color margin-top-sm font-size-sm  font-weight-bold'>\r\n              Details\r\n            </h2>\r\n            <Row className='margin-left-negative  width-794'>\r\n              <Col xs={6}>\r\n                <p className='font-size-xsm '>\r\n                  Participants:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {conflict.participants}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  ID:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>{_id}</span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Payout:{\" \"}\r\n                  <span className='primary-color font-size-md font-weight-bold'>\r\n                    ${payout}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Study Type:{\" \"}\r\n                  <span className='primary-color font-weight-bold'>\r\n                    {conflict.detail[0][\"study-type\"]}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  Status: {\"\"}\r\n                  {status === \"Recruiting\" ? (\r\n                    <span className='green-color font-weight-bold'>\r\n                      {status}\r\n                    </span>\r\n                  ) : status === \"Not Recruiting\" ? (\r\n                    <span className='red-color font-weight-bold'>{status}</span>\r\n                  ) : null}\r\n                </p>\r\n\r\n                <p className='font-size-xsm '>\r\n                  Start Date:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {conflict.detail[0][\"start-date\"]}\r\n                  </span>\r\n                </p>\r\n                <p className=' font-size-xsm '>\r\n                  End Date:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {conflict.detail[0][\"end-date\"]}\r\n                  </span>\r\n                </p>\r\n                <p className='font-size-xsm '>\r\n                  Last Update:{\" \"}\r\n                  <span className=' primary-color font-weight-bold'>\r\n                    {conflict.detail[0][\"last-updated\"]}\r\n                  </span>\r\n                </p>\r\n              </Col>\r\n              <Col xs={6}>\r\n                {conflict.location.map((loc) => (\r\n                  <GoogleMapContainer\r\n                    isActive={\"result-map-container\"}\r\n                    mapAddress={`${loc.address} `}\r\n                  />\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          <h2> Sorry, but this trials doesn't exist yet!</h2>\r\n        )}\r\n        {!isLoggedIn ? (\r\n          <button\r\n            onClick={() => {\r\n              setActive(\"participant\");\r\n              setShowModal(true);\r\n            }}\r\n            className='primary-color-btn height34'\r\n          >\r\n            Apply Now!\r\n          </button>\r\n        ) : conflict.detail[0].status !== \"Not Recruiting\" ||\r\n          submit.status !== \"Not Recruiting\" ? (\r\n          <button\r\n            onClick={() => {\r\n              setActive(\"applied\");\r\n              setAppliedModal(true);\r\n              dispatch(setAppliedTitle(conflict.title));\r\n              dispatch(setAppliedParticipants(conflict.participants));\r\n              dispatch(setAppliedDescription(conflict.description));\r\n            }}\r\n            className='primary-color-btn height34'\r\n          >\r\n            Apply Now!\r\n          </button>\r\n        ) : null}\r\n      </Container>\r\n      {active === \"applied\" && (\r\n        <AppliedTrialModal\r\n          show={appliedModal}\r\n          onHide={() => {\r\n            setAppliedModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}{\" \"}\r\n      {active === \"apply\" && (\r\n        <CreateAccountModal\r\n          cname={auth.companyName}\r\n          show={alertApplyModal}\r\n          onHide={() => {\r\n            setAlertApplyModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"signin\" && (\r\n        <SignInModal\r\n          show={showSignInModal}\r\n          onHide={() => setShowSignInModal(false)}\r\n          setShowModal={setShowModal}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"clinical\" && (\r\n        <ClinicalAuthModal\r\n          show={showClincicalModal}\r\n          onHide={() => setShowClincicalModal(false)}\r\n          setShowModal={setShowModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"participant\" && (\r\n        <ParticipantAuthModal\r\n          show={showModal}\r\n          onHide={() => setShowModal(false)}\r\n          setActive={setActive}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowModal={setShowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport trials from \"../../stimulate-backend/data/future-trials.json\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GoogleMapContainer from \"../../components/map/GoogleMapContainer\";\r\n\r\nexport default function AboutDiscoverTrials() {\r\n  const { id } = useParams();\r\n  const discover = trials.find((trials) => trials.id === Number(id));\r\n  const { submit } = useSelector((state) => ({ ...state }));\r\n  const timeElapsed = Date.now();\r\n  const today = new Date(timeElapsed);\r\n  const {\r\n    title,\r\n    participants,\r\n    payout,\r\n    description,\r\n    qualified,\r\n    notQualified,\r\n    status,\r\n    studyType,\r\n    date,\r\n    trialID,\r\n    location,\r\n  } = submit;\r\n  return (\r\n    <Container>\r\n      {discover ? (\r\n        <div>\r\n          <h2 className='primary-color margin-top-10 font-size-lg font-weight-bold'>\r\n            {discover.title}\r\n          </h2>\r\n          <hr style={{ width: \"405px\" }} />\r\n          <p className='font-size-sm width-620'>{discover.description}</p>\r\n          <hr style={{ width: \"405px\" }} />\r\n          <h2 className='primary-color margin-top-sm font-size-lg font-weight-bold'>\r\n            Legals\r\n          </h2>\r\n          <div>\r\n            <a href=' # '> Legals Information</a>\r\n            <p></p>\r\n            <a href=' # '> Legals Disclosures</a>{\" \"}\r\n          </div>\r\n          <p></p>\r\n          <hr style={{ width: \"405px\" }} />\r\n          <h2 className='primary-color margin-top-sm font-size-lg font-weight-bold'>\r\n            Eligibility\r\n          </h2>\r\n          <Row className='  margin-top-sm'>\r\n            <Col xs={6}>\r\n              {discover.eligibility.map(\r\n                (el) =>\r\n                  el.eligible &&\r\n                  el.eligible.map((id) => (\r\n                    <div className='font-size-xsm margin-left-negative margin-top-sm'>\r\n                      {id.requirement_one ? (\r\n                        <p>\r\n                          <FaCheck className='green-color ' />{\" \"}\r\n                          {id.requirement_one}\r\n                        </p>\r\n                      ) : null}\r\n                      {id.requirement_two ? (\r\n                        <p>\r\n                          {\" \"}\r\n                          <FaCheck className='green-color ' />{\" \"}\r\n                          {id.requirement_two}\r\n                        </p>\r\n                      ) : null}\r\n                      {id.requirement_three ? (\r\n                        <p>\r\n                          {\" \"}\r\n                          <FaCheck className='green-color ' />{\" \"}\r\n                          {id.requirement_three}\r\n                        </p>\r\n                      ) : null}{\" \"}\r\n                      {id.requirement_four ? (\r\n                        <p>\r\n                          {\" \"}\r\n                          <FaCheck className='green-color ' />{\" \"}\r\n                          {id.requirement_four}\r\n                        </p>\r\n                      ) : null}\r\n                    </div>\r\n                  ))\r\n              )}\r\n            </Col>\r\n            <Col xs={6}>\r\n              {discover.eligibility.map(\r\n                (el) =>\r\n                  el.ineligible &&\r\n                  el.ineligible.map((id) => (\r\n                    <div className='font-size-xsm '>\r\n                      {id.requirement_one ? (\r\n                        <p>\r\n                          <FaTimes className='red-color ' />{\" \"}\r\n                          {id.requirement_one}\r\n                        </p>\r\n                      ) : null}\r\n                      {id.requirement_two ? (\r\n                        <p>\r\n                          <FaTimes className='red-color ' />{\" \"}\r\n                          {id.requirement_two}\r\n                        </p>\r\n                      ) : null}\r\n                      {id.requirement_three ? (\r\n                        <p>\r\n                          <FaTimes className='red-color ' />{\" \"}\r\n                          {id.requirement_three}\r\n                        </p>\r\n                      ) : null}\r\n                    </div>\r\n                  ))\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <hr style={{ width: \"405px\" }} />\r\n          <h2 className='primary-color margin-top-sm  font-weight-bold'>\r\n            Details\r\n          </h2>\r\n          <Row className='margin-left-negative  width-794'>\r\n            <Col xs={6}>\r\n              <p className='font-size-xsm '>\r\n                Participants:{\" \"}\r\n                <span className='primary-color font-weight-bold'>\r\n                  {discover.participants}\r\n                </span>\r\n              </p>\r\n              <p className=' font-size-xsm '>\r\n                ID:{\" \"}\r\n                <span className='primary-color font-weight-bold'>\r\n                  {discover.detail[0]._id}\r\n                </span>\r\n              </p>\r\n              <p className='font-size-xsm '>\r\n                Payout:{\" \"}\r\n                <span className='primary-color font-size-md font-weight-bold'>\r\n                  ${discover.detail[0].payout}\r\n                </span>\r\n              </p>\r\n              <p className='font-size-xsm '>\r\n                Study Type:{\" \"}\r\n                <span className='primary-color font-weight-bold'>\r\n                  {discover.detail[0][\"study-type\"]}\r\n                </span>\r\n              </p>\r\n              <p className=' font-size-xsm '>\r\n                Status: {\"\"}\r\n                {discover.detail[0].status === \"Recruiting\" ? (\r\n                  <span className='green-color font-weight-bold'>\r\n                    {discover.detail[0].status}\r\n                  </span>\r\n                ) : discover.detail[0].status === \"Not Recruiting\" ? (\r\n                  <span className='red-color font-weight-bold'>\r\n                    {discover.detail[0].status}\r\n                  </span>\r\n                ) : null}\r\n              </p>\r\n\r\n              <p className='font-size-xsm '>\r\n                Start Date:{\" \"}\r\n                <span className=' primary-color font-weight-bold'>\r\n                  {discover.detail[0][\"start-date\"]}\r\n                </span>\r\n              </p>\r\n              <p className=' font-size-xsm '>\r\n                End Date:{\" \"}\r\n                <span className=' primary-color font-weight-bold'>\r\n                  {discover.detail[0][\"end-date\"]}\r\n                </span>\r\n              </p>\r\n              <p className='font-size-xsm '>\r\n                Last Update:{\" \"}\r\n                <span className=' primary-color font-weight-bold'>\r\n                  {discover.detail[0][\"last-updated\"]}\r\n                </span>\r\n              </p>\r\n            </Col>\r\n            <Col xs={6}>\r\n              {discover.location.map((loc) => (\r\n                <GoogleMapContainer\r\n                  isActive={\"result-map-container\"}\r\n                  mapAddress={`${loc.address} `}\r\n                />\r\n              ))}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : submit ? (\r\n        <div>\r\n          <h2 className='primary-color margin-top-sm  font-weight-bold'>\r\n            {title}\r\n          </h2>\r\n          <hr style={{ width: \"405px\" }} />\r\n          <p className='font-size-sm width-620'>{description}</p>\r\n          <hr style={{ width: \"405px\" }} />\r\n          <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n            Legals\r\n          </h2>\r\n          <div>\r\n            <a href=' # '> Legals Information</a>\r\n            <p></p>\r\n            <a href=' # '> Legals Disclosures</a>\r\n          </div>\r\n          <hr style={{ width: \"405px\" }} />\r\n          <h2 className='primary-color margin-top-sm font-size-sm font-weight-bold'>\r\n            Eligibility\r\n          </h2>\r\n          <Row className='width-619'>\r\n            <Col xs={6}>\r\n              {qualified[0].map((result) => (\r\n                <p>\r\n                  <FaCheck className='green-color ' /> {result}\r\n                </p>\r\n              ))}\r\n            </Col>\r\n\r\n            <Col xs={6}>\r\n              {notQualified[0].map((result) => (\r\n                <p>\r\n                  <FaTimes className='red-color ' /> {result}\r\n                </p>\r\n              ))}\r\n            </Col>\r\n          </Row>\r\n          <hr style={{ width: \"405px\" }} />\r\n\r\n          <h2 className='primary-color margin-top-sm font-size-sm  font-weight-bold'>\r\n            Details\r\n          </h2>\r\n          <Row className='margin-left-negative  width-794'>\r\n            <Col xs={6}>\r\n              <p className='font-size-xsm '>\r\n                Participants:{\" \"}\r\n                <span className='primary-color font-weight-bold'>\r\n                  {participants}\r\n                </span>\r\n              </p>\r\n              <p className=' font-size-xsm '>\r\n                ID:{\" \"}\r\n                <span className='primary-color font-weight-bold'>\r\n                  {trialID}\r\n                </span>\r\n              </p>\r\n              <p className='font-size-xsm '>\r\n                Payout:{\" \"}\r\n                <span className='primary-color font-size-md font-weight-bold'>\r\n                  ${payout}\r\n                </span>\r\n              </p>\r\n              <p className='font-size-xsm '>\r\n                Study Type:{\" \"}\r\n                <span className='primary-color font-weight-bold'>\r\n                  {studyType}\r\n                </span>\r\n              </p>\r\n              <p className=' font-size-xsm '>\r\n                Status: {\"\"}\r\n                {status === \"Recruiting\" ? (\r\n                  <span className='green-color font-weight-bold'>{status}</span>\r\n                ) : status === \"Not Recruiting\" ? (\r\n                  <span className='red-color font-weight-bold'>{status}</span>\r\n                ) : null}\r\n              </p>\r\n\r\n              <p className='font-size-xsm '>\r\n                Start Date:{\" \"}\r\n                <span className=' primary-color font-weight-bold'>\r\n                  {date[0].start}\r\n                </span>\r\n              </p>\r\n              <p className=' font-size-xsm '>\r\n                End Date:{\" \"}\r\n                <span className=' primary-color font-weight-bold'>\r\n                  {date[0].end}\r\n                </span>\r\n              </p>\r\n              <p className='font-size-xsm '>\r\n                Last Update:{\" \"}\r\n                <span className=' primary-color font-weight-bold'>\r\n                  {today.toDateString()}\r\n                </span>\r\n              </p>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <GoogleMapContainer\r\n                isActive={\"result-map-container\"}\r\n                mapAddress={`${location.address} `}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <h2> Sorry, but this trials doesn't exist yet!</h2>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container, Button, Form, Row, Col, Card } from \"react-bootstrap\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function TrialApplied() {\r\n  const { applied } = useSelector((state) => ({ ...state }));\r\n  const { appliedID, url, trialTitle, participants, description } = applied;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Container className='card-container'>\r\n      <h1 className='primary-color text-center'>Applied Trials</h1>\r\n      {appliedID ? (\r\n        <Card className='card'>\r\n          <Card.Header className='card-header-css primary-font primary-color font-weight-bold'>\r\n            {trialTitle}\r\n          </Card.Header>\r\n          <Col>\r\n            <Card.Body>\r\n              <span className='font-weight-bold primary-color'>\r\n                Particpants:{\" \"}\r\n              </span>\r\n              {participants}\r\n            </Card.Body>\r\n            <Card.Text className='margin-top-sm'>\r\n              <span className='font-weight-bold primary-color '>\r\n                Description:{\" \"}\r\n              </span>\r\n              {description}\r\n            </Card.Text>\r\n          </Col>\r\n          <Col>\r\n            <div>\r\n              <Button\r\n                className='primary-color d-flex justify-content-center link-btn'\r\n                onClick={() => window.location.replace(`${url}`)}\r\n              >\r\n                <span className='bottom-4'>Read More</span>\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Card>\r\n      ) : (\r\n        <Card style={{ width: \"20rem\" }} className='height120 margin-left-50'>\r\n          <Card.Body className='top-80'>\r\n            <Card.Title className='text-center primary-color'>\r\n              You have not applied to any trials\r\n            </Card.Title>\r\n            <Card.Text className='text-center margin-top-sm'>\r\n              Please apply to your first trial.\r\n            </Card.Text>\r\n            <Button\r\n              onClick={() => navigate(\"/participate\")}\r\n              className='primary-color-btn width-265 d-flex margin-auto justify-content-center'\r\n            >\r\n              Apply Now\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Button, Form, Row, Col, Card } from \"react-bootstrap\";\r\nexport default function SearchTrials({\r\n  latest,\r\n  conflict,\r\n  future,\r\n  text,\r\n  value,\r\n}) {\r\n  return (\r\n    <Container>\r\n      <div className='d-flex flex-wrap'>\r\n        {latest} {conflict} {future}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SearchTrials from \"./SearchTrials\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LatestTrials from \"../../stimulate-backend/data/latest-trials.json\";\r\nimport futureTrials from \"../../stimulate-backend/data/future-trials.json\";\r\nimport conflictTrials from \"../../stimulate-backend/data/conflict-free.json\";\r\nimport SearchCard from \"../../components/card/Cards\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport default function SearchData() {\r\n  const { search } = useSelector((state) => ({ ...state }));\r\n  const { select, searchValue } = search;\r\n  const { value } = select;\r\n  const { text } = searchValue;\r\n\r\n  // Recruiting Latest Search\r\n  const latest = LatestTrials[\"Latest Trials\"]\r\n    .map((trials) => trials)\r\n    .filter(\r\n      (status) =>\r\n        status.title.includes(searchValue[0].text) ||\r\n        status.title.toLowerCase().includes(searchValue[0].text) ||\r\n        status.participants.includes(searchValue[0].text) ||\r\n        status.participants.toLowerCase().includes(searchValue[0].text)\r\n    )\r\n    .sort(function (a, b) {\r\n      return a.id - b.id;\r\n    })\r\n    .filter(\r\n      (status) =>\r\n        status.detail[0].status.toLowerCase() === select[0].value.toLowerCase()\r\n    )\r\n    .map((item, index) =>\r\n      item.eligibility.map(\r\n        (i) =>\r\n          i.eligible &&\r\n          i.eligible.map(\r\n            (isEligible) =>\r\n              i.ineligible &&\r\n              i.ineligible.map((notEligible) => (\r\n                <>\r\n                  <SearchCard\r\n                    key={index}\r\n                    id={item.id}\r\n                    price={item.price}\r\n                    title={item.title}\r\n                    eligibility={item.participants}\r\n                    eligibleOne={isEligible.requirement_one}\r\n                    eligibleTwo={isEligible.requirement_two}\r\n                    eligibleThree={isEligible.requirement_three}\r\n                    eligibleFour={isEligible.requirement_four}\r\n                    ineligibleOne={notEligible.requirement_one}\r\n                    ineligibleTwo={notEligible.requirement_two}\r\n                    ineligibleThree={notEligible.requirement_three}\r\n                    ineligibleFour={notEligible.requirement_four}\r\n                    status={item.detail[0].status}\r\n                    btnName={\"Learn More\"}\r\n                  ></SearchCard>\r\n                </>\r\n              ))\r\n          )\r\n      )\r\n    );\r\n  // Recruiting Conflict Search\r\n  const conflict = conflictTrials[\"Conflict-Free\"]\r\n    .map((trials) => trials)\r\n    .filter(\r\n      (status) =>\r\n        status.title.includes(searchValue[0].text) ||\r\n        status.title.toLowerCase().includes(searchValue[0].text) ||\r\n        status.participants.includes(searchValue[0].text) ||\r\n        status.participants.toLowerCase().includes(searchValue[0].text)\r\n    )\r\n    .sort(function (a, b) {\r\n      return a.id - b.id;\r\n    })\r\n    .filter((status) => status.detail[0].status === select[0].value)\r\n    .map((item, index) =>\r\n      item.eligibility.map(\r\n        (i) =>\r\n          i.eligible &&\r\n          i.eligible.map(\r\n            (isEligible) =>\r\n              i.ineligible &&\r\n              i.ineligible.map((notEligible) => (\r\n                <>\r\n                  <SearchCard\r\n                    key={index}\r\n                    id={item.id}\r\n                    price={item.price}\r\n                    title={item.title}\r\n                    eligibility={item.participants}\r\n                    eligibleOne={isEligible.requirement_one}\r\n                    eligibleTwo={isEligible.requirement_two}\r\n                    eligibleThree={isEligible.requirement_three}\r\n                    eligibleFour={isEligible.requirement_four}\r\n                    ineligibleOne={notEligible.requirement_one}\r\n                    ineligibleTwo={notEligible.requirement_two}\r\n                    ineligibleThree={notEligible.requirement_three}\r\n                    ineligibleFour={notEligible.requirement_four}\r\n                    status={item.detail[0].status}\r\n                    btnName={\"Participate\"}\r\n                  ></SearchCard>\r\n                </>\r\n              ))\r\n          )\r\n      )\r\n    );\r\n\r\n  // Not Recruiting Future\r\n  const future = futureTrials\r\n    .map((trials) => trials)\r\n    .filter(\r\n      (status) =>\r\n        status.title.includes(searchValue[0].text) ||\r\n        status.title.toLowerCase().includes(searchValue[0].text) ||\r\n        status.participants.includes(searchValue[0].text) ||\r\n        status.participants.toLowerCase().includes(searchValue[0].text)\r\n    )\r\n    .sort(function (a, b) {\r\n      return a.id - b.id;\r\n    })\r\n    .filter((status) => status.detail[0].status === select[0].value)\r\n    .map((item, index) =>\r\n      item.eligibility.map(\r\n        (i) =>\r\n          i.eligible &&\r\n          i.eligible.map(\r\n            (isEligible) =>\r\n              i.ineligible &&\r\n              i.ineligible.map((notEligible) => (\r\n                <>\r\n                  <SearchCard\r\n                    key={index}\r\n                    id={item.id}\r\n                    price={item.price}\r\n                    title={item.title}\r\n                    eligibility={item.participants}\r\n                    eligibleOne={isEligible.requirement_one}\r\n                    eligibleTwo={isEligible.requirement_two}\r\n                    eligibleThree={isEligible.requirement_three}\r\n                    eligibleFour={isEligible.requirement_four}\r\n                    ineligibleOne={notEligible.requirement_one}\r\n                    ineligibleTwo={notEligible.requirement_two}\r\n                    ineligibleThree={notEligible.requirement_three}\r\n                    ineligibleFour={notEligible.requirement_four}\r\n                    status={item.detail[0].status}\r\n                    btnName={\"Discover\"}\r\n                  ></SearchCard>\r\n                </>\r\n              ))\r\n          )\r\n      )\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <SearchTrials\r\n        select={select}\r\n        latest={latest}\r\n        conflict={conflict}\r\n        future={future}\r\n        text={text}\r\n        value={value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.498bfe52.png\";","export const setSearchSelect = (value) => ({\r\n  type: \"SET_SEARCH_SELECT\",\r\n  value,\r\n});\r\n\r\nexport const setSearchText = (text) => ({\r\n  type: \"SET_SEARCH_TEXT\",\r\n  text,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setSearchSelect,\r\n  setSearchText,\r\n} from \"../../redux/actions/searchAction\";\r\n\r\n//react-router-dom\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// FontAwesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nlibrary.add(faGithub, faLinkedin, faSearch);\r\n\r\nexport default function SearchBar({ value, setValue, text, setText }) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { search } = useSelector((state) => ({ ...state }));\r\n\r\n  const handleSubmitSearch = (e) => {\r\n    e.preventDefault();\r\n    if (value === \"\") {\r\n      dispatch(setSearchSelect(\"Recruiting\"));\r\n    } else {\r\n      dispatch(setSearchSelect(value));\r\n    }\r\n    if (text.length > 0) {\r\n      dispatch(setSearchText(text));\r\n    }\r\n\r\n    navigate(\"/search\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className='search-form'>\r\n        <Form.Select\r\n          id='values'\r\n          aria-label='Default select example'\r\n          className='search-select'\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n        >\r\n          <option value='Recruiting'>Recruiting</option>\r\n          <option value='Not Recruiting'>Not Recruiting</option>\r\n        </Form.Select>\r\n        <Form.Control\r\n          placeholder='Search'\r\n          className='search-bar'\r\n          type='text'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <Button variant='primary' className='search-button'>\r\n          <FontAwesomeIcon\r\n            icon={faSearch}\r\n            size='1x'\r\n            onClick={(e) => {\r\n              handleSubmitSearch(e);\r\n            }}\r\n          />\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setClinicalLoggedIn,\r\n  setUserID,\r\n  setIsLoggedIn,\r\n} from \"../../redux/actions/authAction\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nexport const AuthClinicalNav = () => {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const title = auth.clinicalEmail;\r\n  return (\r\n    <>\r\n      {auth.clinicalLoggedIn ? (\r\n        <>\r\n          <NavDropdown\r\n            title={title}\r\n            menuVariant='dark'\r\n            className='margin-left-149'\r\n          >\r\n            <NavDropdown.Item\r\n              href={`/csc642participaid/#/account/${auth.clinicalID}`}\r\n            >\r\n              Account Settings\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item\r\n              href={`/csc642participaid/#/approved-trials/${auth.clinicalID}`}\r\n            >\r\n              Approved Trials\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item\r\n              as='button'\r\n              onClick={() => {\r\n                dispatch(setClinicalLoggedIn(false));\r\n                navigate(\"/\");\r\n              }}\r\n            >\r\n              Logout\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport const AuthParticipant = () => {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const title = auth.email;\r\n  return (\r\n    <>\r\n      {auth.isLoggedIn ? (\r\n        <>\r\n          <NavDropdown\r\n            title={title}\r\n            menuVariant='dark'\r\n            className='margin-left-149'\r\n          >\r\n            <NavDropdown.Item\r\n              href={`/csc642participaid/#/account/${auth.userId}`}\r\n            >\r\n              Account Settings\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item\r\n              href={`/csc642participaid/#/trials/${auth.userId}`}\r\n            >\r\n              Applied Trials\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item\r\n              as='button'\r\n              onClick={() => {\r\n                dispatch(setIsLoggedIn(false));\r\n                navigate(\"/\");\r\n              }}\r\n            >\r\n              Logout\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navbar, Container, Col, Nav, Button, Image } from \"react-bootstrap\";\r\nimport Logo from \"../../image/logo.png\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ParticipantAuthModal from \"../../components/modals/ParticipantAuthModal\";\r\nimport ClinicalAuthModal from \"../../components/modals/ClinicalAuthModal\";\r\nimport SignInModal from \"../../components/modals/SignInModal\";\r\nimport CreateAccountModal from \"../../components/modals/CreateAccountModal\";\r\nimport { AuthClinicalNav, AuthParticipant } from \"./AuthNav\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nlibrary.add(faGithub, faLinkedin, faSearch);\r\n\r\nexport default function NavbarComponent() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [alertModal, setAlertModal] = useState(false);\r\n  const [showClincicalModal, setShowClincicalModal] = useState(false);\r\n  const [showSignInModal, setShowSignInModal] = useState(false);\r\n  const [active, setActive] = useState(\"signup\");\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand='lg' variant='dark' className='gradient '>\r\n        <Container fluid>\r\n          <Navbar.Brand href='/csc642participaid/#'>\r\n            <Image src={Logo} rounded alt='logo' className='navbar-logo' />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n          <Navbar.Collapse id='responsive-navbar-nav'>\r\n            <Nav className='me-auto margin-auto'>\r\n              <Col xs={6} md={4}>\r\n                <Nav.Item>\r\n                  <Nav.Link href='/csc642participaid/#' className='links  '>\r\n                    Home\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Col>\r\n\r\n              <Col xs={6} md={4}>\r\n                <Nav.Item>\r\n                  {auth.clinicalLoggedIn ? (\r\n                    <Nav.Link\r\n                      href='#'\r\n                      className='links'\r\n                      onClick={() => {\r\n                        setActive(\"clinical\");\r\n                        setAlertModal(true);\r\n                      }}\r\n                    >\r\n                      Participate\r\n                    </Nav.Link>\r\n                  ) : (\r\n                    <Nav.Link\r\n                      href='/csc642participaid/#/participate'\r\n                      className='links'\r\n                    >\r\n                      Participate\r\n                    </Nav.Link>\r\n                  )}\r\n                </Nav.Item>\r\n              </Col>\r\n\r\n              <Col xs={6} md={4}>\r\n                <Nav.Item>\r\n                  {auth.isLoggedIn ? (\r\n                    <Nav.Link\r\n                      href='#'\r\n                      className='links'\r\n                      onClick={() => {\r\n                        setActive(\"participants\");\r\n                        setAlertModal(true);\r\n                      }}\r\n                    >\r\n                      Post\r\n                    </Nav.Link>\r\n                  ) : (\r\n                    <Nav.Link\r\n                      href='/csc642participaid/#/submit-trials'\r\n                      className='links'\r\n                    >\r\n                      Post\r\n                    </Nav.Link>\r\n                  )}\r\n                </Nav.Item>\r\n              </Col>\r\n            </Nav>\r\n\r\n            <Nav className='right-135'>\r\n              {auth.clinicalLoggedIn === true ? (\r\n                <AuthClinicalNav />\r\n              ) : auth.isLoggedIn === true ? (\r\n                <AuthParticipant />\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    variant='outline-primary'\r\n                    className='signin-btn'\r\n                    onClick={() => {\r\n                      setActive(\"signin\");\r\n                      setShowSignInModal(true);\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                  <Button\r\n                    variant='outline-primary'\r\n                    className='signup-btn outline-white'\r\n                    onClick={() => {\r\n                      setActive(\"participant\");\r\n                      setShowModal(true);\r\n                    }}\r\n                  >\r\n                    SIGN UP, IT’S FREE\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Nav className='d-flex gradient nav-height'>\r\n        <Container>\r\n          <SearchBar\r\n            value={value}\r\n            setValue={setValue}\r\n            text={text}\r\n            setText={setText}\r\n          />\r\n        </Container>\r\n      </Nav>\r\n      {active === \"signin\" && (\r\n        <SignInModal\r\n          show={showSignInModal}\r\n          onHide={() => setShowSignInModal(false)}\r\n          setShowModal={setShowModal}\r\n          setActive={setActive}\r\n          setShowSignInModal={setShowSignInModal}\r\n        />\r\n      )}{\" \"}\r\n      {active === \"clinical\" && (\r\n        <ClinicalAuthModal\r\n          show={showClincicalModal}\r\n          onHide={() => setShowClincicalModal(false)}\r\n          setShowModal={setShowModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n      {active === \"participant\" && (\r\n        <ParticipantAuthModal\r\n          show={showModal}\r\n          onHide={() => setShowModal(false)}\r\n          setActive={setActive}\r\n          setShowClincicalModal={setShowClincicalModal}\r\n          setShowSignInModal={setShowSignInModal}\r\n          setShowModal={setShowModal}\r\n        />\r\n      )}\r\n      {active === \"participants\" && (\r\n        <CreateAccountModal\r\n          fname={auth.firstName}\r\n          show={alertModal}\r\n          onHide={() => {\r\n            setAlertModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}{\" \"}\r\n      {active === \"clinical\" && (\r\n        <CreateAccountModal\r\n          cname={auth.companyName}\r\n          show={alertModal}\r\n          onHide={() => {\r\n            setAlertModal(false);\r\n          }}\r\n          setActive={setActive}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { FaTwitter, FaFacebook, FaLinkedin } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SocialIcons() {\r\n  return (\r\n    <Fragment>\r\n      <span className='font-size-md'>\r\n        <Link to='/' className='white-color margin-10 fatwitter'>\r\n          <FaTwitter className='fatwitter' />\r\n        </Link>\r\n      </span>\r\n      <span className='font-size-md'>\r\n        <Link to='/' className='white-color margin-10'>\r\n          <FaFacebook className='fafb' />\r\n        </Link>\r\n      </span>\r\n      <span className='font-size-md'>\r\n        <Link to='/' className='white-color margin-10'>\r\n          <FaLinkedin className='falinkedin' />\r\n        </Link>\r\n      </span>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Col, Row, Button, Image, Nav } from \"react-bootstrap\";\r\nimport SocialIcons from \"./SocialIcons\";\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className='gradient margin-top-10 height-footer py-4 '>\r\n        <Container fluid className='text-start margin-top-10'>\r\n          <h2 className=' margin-top-10 white-color font-weight-bold left-20'>\r\n            Participaid\r\n          </h2>\r\n          <h4 className='  white-color font-size-xsm left-20 '>\r\n            © 2021 Participaid Inc. All rights reserved.\r\n          </h4>\r\n          <Nav className='margin-top-sm nav-footer'>\r\n            <Nav.Item>\r\n              <Nav.Link href='/about' className='links  '>\r\n                About Us\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link href='/participate' className='links'>\r\n                Contact Us\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link href='/post' className='links'>\r\n                Terms and Conditions\r\n              </Nav.Link>\r\n            </Nav.Item>{\" \"}\r\n            <Nav.Item>\r\n              <Nav.Link href='/post' className='links'>\r\n                Privacy Policy\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <p className='left-20 margin-top-sm'>\r\n            <SocialIcons />\r\n          </p>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function Banner() {\r\n  const bannerMsg = \"HCI Class SFSU CS Department Fall 2021 Team 1\";\r\n  return (\r\n    <section className='gradient height70 text-shadow'>\r\n      <Container>\r\n        <p className='text-center font-size-sm top-10 white-color font-weight-bold  '>\r\n          {bannerMsg.toUpperCase()}\r\n        </p>\r\n      </Container>{\" \"}\r\n    </section>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { Fragment } from \"react\";\r\n// need to use hashrouter for ghpages deployment\r\nimport {\r\n  HashRouter as Router,\r\n  Routes,\r\n  Route,\r\n  useRoutes,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Home from \"./pages/home/Home\";\r\nimport SubmitTrialData from \"./pages/Submit/SubmitTrialData\";\r\nimport AccountSettingsData from \"./pages/Protected/AccountSettingsData\";\r\nimport ClinicalAccountSettingsData from \"./pages/Protected/ClinicalAccountSettingsData\";\r\nimport Participate from \"./pages/Protected/Participate/Participate\";\r\nimport TrialSubmitted from \"./pages/Protected/clinical/TrialSubmitted\";\r\nimport AboutLatestTrials from \"./pages/Trials/AboutLatestTrials\";\r\nimport AboutLatestSubmitTrials from \"./pages/Trials/AboutLatestSubmit\";\r\nimport AboutConflictTrials from \"./pages/Trials/AboutConflictTrials\";\r\nimport AboutDiscoverTrials from \"./pages/Trials/AboutDiscoverTrials\";\r\nimport TrialApplied from \"./pages/Protected/applied/TrialApplied\";\r\nimport SearchData from \"./components/search/SearchData\";\r\nimport Navbar from \"./utility/navbar/Navbar\";\r\nimport Footer from \"./utility/footer/Footer\";\r\nimport Banner from \"./utility/banner/Banner\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  const { auth, submit } = useSelector((state) => ({ ...state }));\r\n  let element = useRoutes([\r\n    {\r\n      path: \"/\",\r\n      element: (\r\n        <>\r\n          <Home />\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      path: \"submit-trials\",\r\n      element: (\r\n        <>\r\n          <SubmitTrialData />\r\n        </>\r\n      ),\r\n    },\r\n\r\n    {\r\n      path: \"/account/:id\",\r\n      element: auth.isLoggedIn ? (\r\n        <AccountSettingsData />\r\n      ) : auth.clinicalLoggedIn ? (\r\n        <ClinicalAccountSettingsData />\r\n      ) : (\r\n        <Navigate to='/' />\r\n      ),\r\n    },\r\n    {\r\n      path: \"participate\",\r\n      element: <Participate />,\r\n    },\r\n\r\n    {\r\n      path: \"participate/latest/:id\",\r\n      element: <AboutLatestTrials />,\r\n    },\r\n    {\r\n      path: \"approved-trials/:userID/\",\r\n      element: auth.clinicalLoggedIn ? <TrialSubmitted /> : <Navigate to='/' />,\r\n    },\r\n    {\r\n      path: \"approved-trials/:userID/latest/:id\",\r\n      element:\r\n        submit.poster === auth.clinicalID ? (\r\n          <AboutLatestTrials />\r\n        ) : (\r\n          <Navigate to='/' />\r\n        ),\r\n    },\r\n    {\r\n      path: \"trials/:id\",\r\n      element: auth.isLoggedIn ? <TrialApplied /> : <Navigate to='/' />,\r\n    },\r\n\r\n    {\r\n      path: \"latest/:id\",\r\n      element: <AboutLatestTrials />,\r\n    },\r\n    {\r\n      path: \"latest/submit/:id\",\r\n      element: <AboutLatestSubmitTrials />,\r\n    },\r\n    {\r\n      path: \"conflict-free/:id\",\r\n      element: <AboutConflictTrials />,\r\n    },\r\n    {\r\n      path: \"discover/:id\",\r\n      element: <AboutDiscoverTrials />,\r\n    },\r\n    {\r\n      path: \"search\",\r\n      element: <SearchData />,\r\n    },\r\n    {\r\n      path: \"search/latest/:id\",\r\n      element: <AboutLatestTrials />,\r\n    },\r\n    {\r\n      path: \"search/conflict-free/:id\",\r\n      element: <AboutConflictTrials />,\r\n    },\r\n    {\r\n      path: \"search/discover/:id\",\r\n      element: <AboutDiscoverTrials />,\r\n    },\r\n  ]);\r\n  return (\r\n    <div className='App'>\r\n      <Banner />\r\n      <Navbar />\r\n      {element}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const INITIAL_STATE = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  address: \"\",\r\n  aptno: \"\", \r\n  citystate: \"\",\r\n  zipcode: \"\",\r\n  password: \"\",\r\n  userId: \"\",\r\n  isLoggedIn: false,\r\n  companyName: \"\",\r\n  clinicalEmail: \"\",\r\n  clinicalPassword: \"\",\r\n  clinicalID: \"\",\r\n  clinicalLoggedIn: false,\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_FIRST_NAME\":\r\n      return {\r\n        ...state,\r\n        firstName: action.firstName,\r\n      };\r\n    case \"SET_USER_LAST_NAME\":\r\n      return {\r\n        ...state,\r\n        lastName: action.lastName,\r\n      };\r\n    case \"SET_USER_EMAIL\":\r\n      return {\r\n        ...state,\r\n        email: action.email,\r\n      };\r\n    case \"SET_USER_PASSWORD\":\r\n      return {\r\n        ...state,\r\n        password: action.password,\r\n      };\r\n    case \"SET_USER_ADDRESS\":\r\n      return{\r\n        ...state,\r\n        address: action.address,\r\n      }\r\n    case \"SET_USER_APTNO\":\r\n      return{\r\n        ...state,\r\n        aptno: action.aptno,\r\n      }\r\n    case \"SET_USER_CITYSTATE\":\r\n      return{\r\n        ...state,\r\n        citystate: action.citystate,\r\n      }\r\n    case \"SET_USER_ZIPCODE\":\r\n      return{\r\n        ...state,\r\n        zipcode: action.zipcode,\r\n      }\r\n    case \"SET_USER_ID\":\r\n      return {\r\n        ...state,\r\n        userId: action.userId,\r\n      };\r\n    case \"SET_USER_IS_LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLoggedIn,\r\n      };\r\n    case \"SET_USER_COMPANY_NAME\":\r\n      return {\r\n        ...state,\r\n        companyName: action.companyName,\r\n      };\r\n    case \"SET_USER_CLINICAL_EMAIL\":\r\n      return {\r\n        ...state,\r\n        clinicalEmail: action.clinicalEmail,\r\n      };\r\n    case \"SET_USER_CLINICAL_PASSWORD\":\r\n      return {\r\n        ...state,\r\n        clinicalPassword: action.clinicalPassword,\r\n      };\r\n    case \"SET_USER_CLINICAL_ID\":\r\n      return {\r\n        ...state,\r\n        clinicalID: action.clinicalID,\r\n      };\r\n    case \"SET_USER_CLINICAL_LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        clinicalLoggedIn: action.clinicalLoggedIn,\r\n      };\r\n    case \"DELETE_USER_INFO\":\r\n      return{\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        address: \"\",\r\n        aptno: \"\", \r\n        citystate: \"\",\r\n        zipcode: \"\",\r\n        password: \"\",\r\n        userId: \"\",\r\n        isLoggedIn: false,\r\n        companyName: \"\",\r\n        clinicalEmail: \"\",\r\n        clinicalPassword: \"\",\r\n        clinicalID: \"\",\r\n        clinicalLoggedIn: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const INITIAL_STATE = {\r\n  title: \"\",\r\n  description: \"\",\r\n  qualified: [],\r\n  participants: \"\",\r\n  notQualified: [],\r\n  prerequisite: [],\r\n  location: [{ address: \"\", coordinates: [{ lat: \"\", lng: \"\" }] }],\r\n  payout: \"\",\r\n  status: \"\",\r\n  studyType: \"\",\r\n  trialID: \"\",\r\n  date: [{ start: \"\", end: \"\" }],\r\n  poster: \"\",\r\n};\r\n\r\nconst trialSubmitReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TRIAL_TITLE\":\r\n      return {\r\n        ...state,\r\n        title: action.title,\r\n      };\r\n    case \"SET_TRIAL_PARTICIPANTS\":\r\n      return {\r\n        ...state,\r\n        participants: action.participants,\r\n      };\r\n    case \"SET_TRIAL_DESCRIPTION\":\r\n      return {\r\n        ...state,\r\n        description: action.description,\r\n      };\r\n    case \"SET_TRIAL_QUALIFIED\":\r\n      return {\r\n        ...state,\r\n        qualified: [action.qualified],\r\n      };\r\n    case \"SET_TRIAL_NOT_QUALIFIED\":\r\n      return {\r\n        ...state,\r\n        notQualified: [action.notQualified],\r\n      };\r\n    case \"SET_TRIAL_PREREQUISITE\":\r\n      return {\r\n        ...state,\r\n        prerequisite: [action.prerequisite],\r\n      };\r\n    case \"SET_TRIAL_LOCATION\":\r\n      return {\r\n        ...state,\r\n        location: {\r\n          address: action.address,\r\n          coordinates: [{ lat: action.lat, lng: action.lng }],\r\n        },\r\n      };\r\n    case \"SET_TRIAL_PAYOUT\":\r\n      return {\r\n        ...state,\r\n        payout: action.payout,\r\n      };\r\n    case \"SET_TRIAL_STATUS\":\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    case \"SET_TRIAL_TYPE\":\r\n      return {\r\n        ...state,\r\n        studyType: action.studyType,\r\n      };\r\n    case \"SET_TRIAL_ID\":\r\n      return {\r\n        ...state,\r\n        trialID: action.trialID,\r\n      };\r\n    case \"SET_TRIAL_DATE\":\r\n      return {\r\n        ...state,\r\n        date: [{ start: action.start, end: action.end }],\r\n      };\r\n    case \"SET_TRIAL_POSTER\":\r\n      return {\r\n        ...state,\r\n        poster: action.poster,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default trialSubmitReducer;\r\n","const INITIAL_STATE = {\r\n  select: [{ value: \"\" }],\r\n  searchValue: [{ text: \"\" }],\r\n};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH_SELECT\":\r\n      return {\r\n        ...state,\r\n        select: [{ value: action.value }],\r\n      };\r\n    case \"SET_SEARCH_TEXT\":\r\n      return {\r\n        ...state,\r\n        searchValue: [{ text: action.text }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","const INITIAL_STATE = {\r\n  name: [{ first: \"\", last: \"\" }],\r\n  email: \"\",\r\n  appliedID: \"\",\r\n  url: \"\",\r\n  trialTitle: \"\",\r\n  participants: \"\",\r\n  description: \"\",\r\n};\r\n\r\nconst appliedReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_APPLIED_NAME\":\r\n      return {\r\n        ...state,\r\n        name: [{ first: action.first, last: action.last }],\r\n      };\r\n    case \"SET_APPLIED_EMAIL\":\r\n      return {\r\n        ...state,\r\n        email: action.email,\r\n      };\r\n    case \"SET_APPLIED_ID\":\r\n      return {\r\n        ...state,\r\n        appliedID: action.appliedID,\r\n      };\r\n\r\n    case \"SET_APPLIED_URL\":\r\n      return {\r\n        ...state,\r\n        url: action.url,\r\n      };\r\n    case \"SET_APPLIED_TITLE\":\r\n      return {\r\n        ...state,\r\n        trialTitle: action.trialTitle,\r\n      };\r\n    case \"SET_APPLIED_PARTICIPANTS\":\r\n      return {\r\n        ...state,\r\n        participants: action.participants,\r\n      };\r\n    case \"SET_APPLIED_DESCRIPTION\":\r\n      return {\r\n        ...state,\r\n        description: action.description,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appliedReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./mediaQueries.css\";\nimport App from \"./App\";\nimport \"./map.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// for ghpages deployment\n// import { HashRouter as Router } from \"react-router-dom\";\n// for development\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport authReducer from \"./redux/reducers/authReducer\";\nimport trailSubmitReducer from \"./redux/reducers/trialSubmitReducer\";\nimport searchReducer from \"./redux/reducers/searchReducer\";\nimport appliedReducer from \"./redux/reducers/appliedReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n// redux-persist\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport autoMergeLevel1 from \"redux-persist/lib/stateReconciler/autoMergeLevel1\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  submit: trailSubmitReducer,\n  search: searchReducer,\n  applied: appliedReducer,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  stateReconciler: autoMergeLevel1,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = composeWithDevTools(applyMiddleware(thunk))(createStore)(\n  persistedReducer\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}